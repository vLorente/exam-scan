version: "3.8"

services:
  app:
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile.fullstack
    volumes:
      - ../:/workspace:cached
    ports:
      - "8000:8000"
      - "4200:4200"
    command: sleep infinity
    depends_on:
      - db
      - redis
    networks:
      - examscan

  # backend:
  #   container_name: dev_backend
  #   build:
  #     context: ../backend
  #     dockerfile: ../.devcontainer/Dockerfile.backend
  #   volumes:
  #     - ../:/workspace:cached
  #   ports:
  #     - "8000:8000"
  #   command: sleep infinity
  #   depends_on:
  #     - db
  #     - redis
  #   networks:
  #     - examscan

  # frontend:
  #   container_name: dev_frontend
  #   build:
  #     context: ../frontend
  #     dockerfile: ../.devcontainer/Dockerfile.frontend
  #   volumes:
  #     - ../:/workspace:cached
  #   ports:
  #     - "4200:4200"
  #   command: sleep infinity
  #   networks:
  #     - examscan

  db:
    container_name: dev_db
    image: postgres:17.5
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - postgres-data-dev:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: app
      POSTGRES_USER: app_user
      POSTGRES_PASSWORD: app_password
    networks:
      - examscan

  redis:
    container_name: dev_redis
    image: redis:8.0.3
    restart: unless-stopped
    ports:
    - "6379:6379" # Puerto por defecto de Redis
    networks:
      - examscan

volumes:
  postgres-data-dev:

networks:
  examscan:
    driver: bridge
