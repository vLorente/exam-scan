{
    "pipes": [],
    "interfaces": [
        {
            "name": "DashboardCard",
            "id": "interface-DashboardCard-ed651a49a8db461f5f3420ed5937d61414007a2cec8add3df42e3a749c341ac3718c0f504192d2b99306540b87ef37ef2d16d82f095beead57fc8fb6eddc0b62",
            "file": "src/app/features/dashboard/pages/dashboard-page/dashboard-page.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, inject, computed, signal, ChangeDetectionStrategy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../../auth/services/auth.service';\nimport { DashboardHeaderComponent } from '../../components/dashboard-header/dashboard-header';\nimport { DashboardCardComponent } from '../../components/dashboard-card/dashboard-card';\n\ninterface DashboardCard {\n  id: string;\n  title: string;\n  description: string;\n  buttonText: string;\n  icon: string;\n  routerLink?: string;\n  disabled?: boolean;\n  buttonClass?: string;\n  requiresRole?: string[];\n}\n\n@Component({\n  selector: 'app-dashboard-page',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [CommonModule, DashboardHeaderComponent, DashboardCardComponent],\n  templateUrl: './dashboard-page.html',\n  styleUrl: './dashboard-page.css'\n})\nexport class DashboardPageComponent {\n  private authService = inject(AuthService);\n  private router = inject(Router);\n\n  currentUser = this.authService.user;\n\n  private allCards = signal<DashboardCard[]>([\n    {\n      id: 'exams',\n      title: 'Exámenes',\n      description: 'Gestiona tus exámenes, crea nuevos o revisa los existentes.',\n      buttonText: 'Ver Exámenes',\n      icon: 'quiz',\n      routerLink: '/exams'\n    },\n    {\n      id: 'ai-processing',\n      title: 'Procesamiento IA',\n      description: 'Sube archivos PDF para extraer preguntas automáticamente.',\n      buttonText: 'Próximamente',\n      icon: 'smart_toy',\n      disabled: true,\n      buttonClass: 'btn-secondary'\n    },\n    {\n      id: 'users',\n      title: 'Usuarios',\n      description: 'Administra usuarios y permisos del sistema.',\n      buttonText: 'Gestionar Usuarios',\n      icon: 'people',\n      routerLink: '/users',\n      requiresRole: ['admin']\n    },\n    {\n      id: 'statistics',\n      title: 'Estadísticas',\n      description: 'Revisa el rendimiento y estadísticas de exámenes.',\n      buttonText: 'Próximamente',\n      icon: 'analytics',\n      disabled: true,\n      buttonClass: 'btn-secondary'\n    }\n  ]);\n\n  dashboardCards = computed(() => {\n    const user = this.currentUser();\n    if (!user) return [];\n\n    return this.allCards().filter(card => {\n      if (!card.requiresRole) return true;\n      return card.requiresRole.includes(user.role);\n    });\n  });\n\n  handleLogout(): void {\n    this.authService.logout();\n    this.router.navigate(['/login']);\n  }\n\n  handleCardAction(cardId: string): void {\n    // Handle custom card actions if needed\n    console.log(`Card action triggered: ${cardId}`);\n  }\n}\n",
            "properties": [
                {
                    "name": "buttonClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "buttonText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "requiresRole",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "routerLink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "DemoStep",
            "id": "interface-DemoStep-4c2c0dd1c3eeabf27a02d9428b9130f5852592df07da28ac1506639d2682a3ebbb31219e56d7d53e6b008082b76236ddc00cc7a2178e0db5954afa58618c0601",
            "file": "src/app/features/landing/components/demo-section/demo-section.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, ChangeDetectionStrategy, signal } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\ninterface DemoStep {\n  id: number;\n  title: string;\n  description: string;\n  visual: string;\n}\n\n@Component({\n  selector: 'app-demo-section',\n  templateUrl: './demo-section.html',\n  styleUrls: ['./demo-section.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [CommonModule]\n})\nexport class DemoSectionComponent {\n\n  activeStep = signal(1);\n\n  steps: DemoStep[] = [\n    {\n      id: 1,\n      title: 'Sube tu PDF',\n      description: 'Arrastra y suelta tu archivo PDF de examen. Soportamos hasta 200 páginas y 20MB.',\n      visual: 'upload'\n    },\n    {\n      id: 2,\n      title: 'IA extrae preguntas',\n      description: 'Nuestros algoritmos analizan el contenido y identifican preguntas y respuestas automáticamente.',\n      visual: 'processing'\n    },\n    {\n      id: 3,\n      title: 'Revisa y edita',\n      description: 'Valida las preguntas extraídas, realiza ajustes y añade tus propias preguntas.',\n      visual: 'editing'\n    },\n    {\n      id: 4,\n      title: 'Publica y comparte',\n      description: 'Configura tu examen, establece tiempos y compártelo con tus estudiantes.',\n      visual: 'sharing'\n    }\n  ];\n\n  selectStep(stepId: number): void {\n    this.activeStep.set(stepId);\n  }\n\n  getVisualDescription(): string {\n    const step = this.steps.find(s => s.id === this.activeStep());\n    switch (step?.visual) {\n      case 'upload':\n        return 'Demostración visual del proceso de subida de archivo PDF con barra de progreso';\n      case 'processing':\n        return 'Animación del cerebro artificial procesando el documento con ondas de actividad';\n      case 'editing':\n        return 'Interfaz de edición mostrando preguntas extraídas con opciones de respuesta';\n      case 'sharing':\n        return 'Tarjeta de examen publicado con estadísticas y opciones de compartir';\n      default:\n        return 'Demostración visual del paso actual del proceso';\n    }\n  }\n}\n",
            "properties": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "visual",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Feature",
            "id": "interface-Feature-d98668aedece7ef1669e9dd6532e107d9dbfb07adadf7f686d66e789ee4828d601e6377ea0a23d84ec75e2f66055bcbc74cb63b31b222f704685bf36c43f0ccf",
            "file": "src/app/features/landing/components/features-section/features-section.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\ninterface Feature {\n  icon: string;\n  title: string;\n  description: string;\n  color: string;\n}\n\n@Component({\n  selector: 'app-features-section',\n  templateUrl: './features-section.html',\n  styleUrls: ['./features-section.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [CommonModule]\n})\nexport class FeaturesSectionComponent {\n\n  features: Feature[] = [\n    {\n      icon: '🤖',\n      title: 'Extracción con IA',\n      description: 'Nuestros modelos de IA extraen automáticamente preguntas y respuestas de tus PDFs con 95% de precisión.',\n      color: 'from-blue-500 to-purple-600'\n    },\n    {\n      icon: '✏️',\n      title: 'Edición Colaborativa',\n      description: 'Crea y edita exámenes en equipo con comentarios en tiempo real y control de versiones.',\n      color: 'from-green-500 to-blue-500'\n    },\n    {\n      icon: '📊',\n      title: 'Análisis Avanzado',\n      description: 'Obtén estadísticas detalladas sobre el rendimiento de los estudiantes y la dificultad de las preguntas.',\n      color: 'from-purple-500 to-pink-500'\n    },\n    {\n      icon: '🎯',\n      title: 'Exámenes Interactivos',\n      description: 'Diseña exámenes con temporizador, navegación intuitiva y feedback inmediato.',\n      color: 'from-orange-500 to-red-500'\n    },\n    {\n      icon: '🔒',\n      title: 'Seguridad Total',\n      description: 'Protección de datos con cifrado TLS, autenticación JWT y control de acceso granular.',\n      color: 'from-indigo-500 to-blue-600'\n    },\n    {\n      icon: '📱',\n      title: 'Multiplataforma',\n      description: 'Accede desde cualquier dispositivo con nuestra interfaz responsive y optimizada.',\n      color: 'from-pink-500 to-rose-500'\n    }\n  ];\n}\n",
            "properties": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "LoginRequest",
            "id": "interface-LoginRequest-3d99097c907658911f68d3668b7bdaa4e63f1827cbb63861e98e9e33bc7c26c77ad6a50406c803113470fea758feb89e5ca41c0fc9923471b9ab61b4f298ada8",
            "file": "src/app/core/models/user.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n  id: string;\n  name: string;\n  email: string;\n  role: 'admin' | 'teacher' | 'student';\n}\n\nexport interface LoginRequest {\n  email: string;\n  password: string;\n}\n\nexport interface LoginResponse {\n  token: string;\n  user: User;\n}\n\nexport interface RegisterRequest {\n  email: string;\n  username: string;\n  full_name: string;\n  role?: 'admin' | 'teacher' | 'student';\n  password: string;\n}\n",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "LoginResponse",
            "id": "interface-LoginResponse-3d99097c907658911f68d3668b7bdaa4e63f1827cbb63861e98e9e33bc7c26c77ad6a50406c803113470fea758feb89e5ca41c0fc9923471b9ab61b4f298ada8",
            "file": "src/app/core/models/user.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n  id: string;\n  name: string;\n  email: string;\n  role: 'admin' | 'teacher' | 'student';\n}\n\nexport interface LoginRequest {\n  email: string;\n  password: string;\n}\n\nexport interface LoginResponse {\n  token: string;\n  user: User;\n}\n\nexport interface RegisterRequest {\n  email: string;\n  username: string;\n  full_name: string;\n  role?: 'admin' | 'teacher' | 'student';\n  password: string;\n}\n",
            "properties": [
                {
                    "name": "token",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "RegisterRequest",
            "id": "interface-RegisterRequest-3d99097c907658911f68d3668b7bdaa4e63f1827cbb63861e98e9e33bc7c26c77ad6a50406c803113470fea758feb89e5ca41c0fc9923471b9ab61b4f298ada8",
            "file": "src/app/core/models/user.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n  id: string;\n  name: string;\n  email: string;\n  role: 'admin' | 'teacher' | 'student';\n}\n\nexport interface LoginRequest {\n  email: string;\n  password: string;\n}\n\nexport interface LoginResponse {\n  token: string;\n  user: User;\n}\n\nexport interface RegisterRequest {\n  email: string;\n  username: string;\n  full_name: string;\n  role?: 'admin' | 'teacher' | 'student';\n  password: string;\n}\n",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "full_name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "role",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"admin\" | \"teacher\" | \"student\"",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "username",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "User",
            "id": "interface-User-d4821beac0e4a852e513391b7470981c4353fdd95a18628bb68136c8695b489ee15b926e2e5031bc26cf30e1508e0a362c3ee13a06734702b4d15af140e485d5",
            "file": "src/stories/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n  name: string;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "User",
            "id": "interface-User-3d99097c907658911f68d3668b7bdaa4e63f1827cbb63861e98e9e33bc7c26c77ad6a50406c803113470fea758feb89e5ca41c0fc9923471b9ab61b4f298ada8-1",
            "file": "src/app/core/models/user.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n  id: string;\n  name: string;\n  email: string;\n  role: 'admin' | 'teacher' | 'student';\n}\n\nexport interface LoginRequest {\n  email: string;\n  password: string;\n}\n\nexport interface LoginResponse {\n  token: string;\n  user: User;\n}\n\nexport interface RegisterRequest {\n  email: string;\n  username: string;\n  full_name: string;\n  role?: 'admin' | 'teacher' | 'student';\n  password: string;\n}\n",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "role",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"admin\" | \"teacher\" | \"student\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "User-1"
        }
    ],
    "injectables": [
        {
            "name": "AuthService",
            "id": "injectable-AuthService-e546002a0f734ca6c0fb631a931d23c79862ed28308750e94cab55aaac3701ef58385b8f9cf6f67c3fa1915ab20494a4244692ed02d81f52e224c09108c39eff",
            "file": "src/app/features/auth/services/auth.service.ts",
            "properties": [
                {
                    "name": "API_URL",
                    "defaultValue": "environment.apiUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "currentUser",
                    "defaultValue": "signal<User | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "handleError",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 78,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "http",
                    "defaultValue": "inject(HttpClient)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isAuthenticated",
                    "defaultValue": "signal<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "login",
                    "args": [
                        {
                            "name": "credentials",
                            "type": "LoginRequest",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<LoginResponse>",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "credentials",
                            "type": "LoginRequest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "register",
                    "args": [
                        {
                            "name": "userData",
                            "type": "RegisterRequest",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<LoginResponse>",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "userData",
                            "type": "RegisterRequest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setSession",
                    "args": [
                        {
                            "name": "response",
                            "type": "LoginResponse",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "response",
                            "type": "LoginResponse",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, signal, inject } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError, catchError } from 'rxjs';\nimport { User, LoginRequest, LoginResponse, RegisterRequest } from '../../../core/models/user.model';\nimport { environment } from '../../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private http = inject(HttpClient);\n  private readonly API_URL = environment.apiUrl;\n\n  private currentUser = signal<User | null>(null);\n  private isAuthenticated = signal<boolean>(false);\n\n  constructor() {\n    // Check for existing session\n    const token = localStorage.getItem('auth_token');\n    const userStr = localStorage.getItem('current_user');\n    if (token && userStr) {\n      try {\n        const user = JSON.parse(userStr);\n        this.currentUser.set(user);\n        this.isAuthenticated.set(true);\n      } catch {\n        this.logout();\n      }\n    }\n  }\n\n  get user() {\n    return this.currentUser.asReadonly();\n  }\n\n  get authenticated() {\n    return this.isAuthenticated.asReadonly();\n  }\n\n  login(credentials: LoginRequest): Observable<LoginResponse> {\n    return this.http.post<LoginResponse>(`${this.API_URL}/v1/auth/login`, credentials)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  register(userData: RegisterRequest): Observable<LoginResponse> {\n    // Mapear los datos del frontend al formato esperado por el backend\n    const backendData = {\n      email: userData.email,\n      username: userData.username,\n      full_name: userData.full_name,\n      role: userData.role || 'student',\n      is_active: true,\n      password: userData.password\n    };\n\n    return this.http.post<LoginResponse>(`${this.API_URL}/v1/auth/register`, backendData)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  logout(): void {\n    this.currentUser.set(null);\n    this.isAuthenticated.set(false);\n    localStorage.removeItem('auth_token');\n    localStorage.removeItem('current_user');\n  }\n\n  setSession(response: LoginResponse): void {\n    localStorage.setItem('auth_token', response.token);\n    localStorage.setItem('current_user', JSON.stringify(response.user));\n    this.currentUser.set(response.user);\n    this.isAuthenticated.set(true);\n  }\n\n  private handleError = (error: HttpErrorResponse): Observable<never> => {\n    let errorMessage = 'Ha ocurrido un error inesperado';\n\n    if (error.error instanceof ErrorEvent) {\n      // Error del lado del cliente\n      errorMessage = `Error: ${error.error.message}`;\n    } else {\n      // Error del servidor\n      switch (error.status) {\n        case 400:\n          errorMessage = error.error?.message || 'Datos inválidos';\n          break;\n        case 401:\n          errorMessage = 'Credenciales inválidas';\n          break;\n        case 409:\n          errorMessage = 'El email ya está registrado';\n          break;\n        case 422:\n          errorMessage = error.error?.message || 'Error de validación';\n          break;\n        case 500:\n          errorMessage = 'Error interno del servidor';\n          break;\n        default:\n          errorMessage = `Error ${error.status}: ${error.error?.message || 'Error desconocido'}`;\n      }\n    }\n\n    return throwError(() => new Error(errorMessage));\n  };\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 15
            },
            "accessors": {
                "user": {
                    "name": "user",
                    "getSignature": {
                        "name": "user",
                        "type": "",
                        "returnType": "",
                        "line": 32
                    }
                },
                "authenticated": {
                    "name": "authenticated",
                    "getSignature": {
                        "name": "authenticated",
                        "type": "",
                        "returnType": "",
                        "line": 36
                    }
                }
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "App",
            "id": "component-App-8dd4c6d1d9283b06e268a71849585dca01121efa4bcd1f36504bd9f323ae8ee9b466588e8d28d4c254cbf4e8643e3c624f6c7c5b830a7d52eac87c0f4fce8fd8",
            "file": "src/app/app.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "signal('frontend')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        124,
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "RouterOutlet"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, signal } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  imports: [RouterOutlet],\n  templateUrl: './app.html',\n  styleUrl: './app.css'\n})\nexport class App {\n  protected readonly title = signal('frontend');\n}\n",
            "styleUrl": "./app.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<router-outlet />\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-d7bf0323e6da130e2609e2af0117b4a8d7cd874132206af50bf43dfc37044485fe50f2867ea76525730dd195b9b95a43802a12dadc6ad5cd7bf2faa07f19f0da",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": " <button  type=\"button\"\n  (click)=\"onClick.emit($event)\"\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n>\n  {{ label }}\n</button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nWhat background color to use",
                    "description": "<p>What background color to use</p>\n",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 760,
                            "end": 773,
                            "kind": 327,
                            "id": 0,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "tagName": {
                                "pos": 761,
                                "end": 769,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 37,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nIs this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nHow large should the button be?",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 29,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nOptional click handler",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 41,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  standalone: true,\n  imports: [CommonModule],\n  template: ` <button\n  type=\"button\"\n  (click)=\"onClick.emit($event)\"\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n>\n  {{ label }}\n</button>`,\n  styleUrls: ['./button.css'],\n})\nexport class ButtonComponent {\n  /** Is this the principal call to action on the page? */\n  @Input()\n  primary = false;\n\n  /** What background color to use */\n  @Input()\n  backgroundColor?: string;\n\n  /** How large should the button be? */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /** Optional click handler */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  display: inline-block;\n  cursor: pointer;\n  border: 0;\n  border-radius: 3em;\n  font-weight: 700;\n  line-height: 1;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n.storybook-button--primary {\n  background-color: #555ab9;\n  color: white;\n}\n.storybook-button--secondary {\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n  background-color: transparent;\n  color: #333;\n}\n.storybook-button--small {\n  padding: 10px 16px;\n  font-size: 12px;\n}\n.storybook-button--medium {\n  padding: 11px 20px;\n  font-size: 14px;\n}\n.storybook-button--large {\n  padding: 12px 24px;\n  font-size: 16px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 43
                    }
                }
            }
        },
        {
            "name": "CtaSectionComponent",
            "id": "component-CtaSectionComponent-8295a8d141adf4b571c804850229a50f41f20a348edbabfd0de0d5bad1b2068c9114c02d0d22102c20766c86c8a5baf313ff6389de4e82070b945735ccaa0c2c",
            "file": "src/app/features/landing/components/cta-section/cta-section.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-cta-section",
            "styleUrls": [
                "./cta-section.css"
            ],
            "styles": [],
            "templateUrl": [
                "./cta-section.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "navigateToLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "navigateToRegister",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-cta-section',\n  templateUrl: './cta-section.html',\n  styleUrls: ['./cta-section.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [CommonModule]\n})\nexport class CtaSectionComponent {\n\n  constructor(private router: Router) {}\n\n  navigateToRegister(): void {\n    this.router.navigate(['/register']);\n  }\n\n  navigateToLogin(): void {\n    this.router.navigate(['/login']);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".cta-section {\n  position: relative;\n  background: var(--primary-gradient);\n  overflow: hidden;\n}\n\n.cta-container {\n  max-width: var(--container-max-width);\n  margin: 0 auto;\n  padding: var(--section-padding) var(--container-padding) 0;\n  position: relative;\n  z-index: 1;\n}\n\n.cta-background {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  overflow: hidden;\n}\n\n.bg-circle {\n  position: absolute;\n  border-radius: var(--radius-full);\n  background: rgba(255, 255, 255, 0.05);\n  animation: float 6s ease-in-out infinite;\n}\n\n.circle-1 {\n  width: 200px;\n  height: 200px;\n  top: 10%;\n  left: 10%;\n  animation-delay: 0s;\n}\n\n.circle-2 {\n  width: 150px;\n  height: 150px;\n  top: 60%;\n  right: 15%;\n  animation-delay: 2s;\n}\n\n.circle-3 {\n  width: 100px;\n  height: 100px;\n  bottom: 20%;\n  left: 20%;\n  animation-delay: 4s;\n}\n\n.cta-content {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: var(--spacing-2xl);\n  align-items: center;\n  margin-bottom: var(--spacing-2xl);\n}\n\n.cta-main {\n  color: white;\n}\n\n.cta-title {\n  font-size: var(--font-size-5xl);\n  font-weight: 700;\n  line-height: 1.2;\n  margin-bottom: var(--spacing-md);\n}\n\n.gradient-text {\n  background: var(--accent-gradient);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n}\n\n.cta-description {\n  font-size: var(--font-size-xl);\n  line-height: 1.6;\n  margin-bottom: var(--spacing-lg);\n  opacity: 0.9;\n}\n\n.cta-buttons {\n  display: flex;\n  gap: var(--spacing-sm);\n  flex-wrap: wrap;\n  margin-bottom: var(--spacing-lg);\n}\n\n.cta-features {\n  display: flex;\n  gap: var(--spacing-lg);\n  flex-wrap: wrap;\n}\n\n.feature-item {\n  display: flex;\n  align-items: center;\n  gap: var(--spacing-xs);\n  font-size: var(--font-size-sm);\n  opacity: 0.9;\n}\n\n.feature-icon {\n  color: var(--success-color);\n  font-weight: 700;\n}\n\n.cta-testimonial {\n  display: flex;\n  justify-content: center;\n}\n\n.testimonial-card {\n  background: var(--glass-bg);\n  backdrop-filter: blur(20px);\n  border: 1px solid var(--glass-border);\n  border-radius: var(--radius-2xl);\n  padding: var(--spacing-lg);\n  max-width: 400px;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n}\n\n.testimonial-content {\n  position: relative;\n  margin-bottom: var(--spacing-md);\n}\n\n.quote-icon {\n  font-size: var(--font-size-5xl);\n  color: rgba(255, 255, 255, 0.3);\n  position: absolute;\n  top: -10px;\n  left: -5px;\n  line-height: 1;\n}\n\n.testimonial-text {\n  font-size: var(--font-size-base);\n  line-height: 1.6;\n  color: white;\n  margin: 0;\n  padding-left: var(--spacing-lg);\n  font-style: italic;\n}\n\n.testimonial-author {\n  display: flex;\n  align-items: center;\n  gap: var(--spacing-sm);\n}\n\n.author-avatar {\n  width: 50px;\n  height: 50px;\n  border-radius: var(--radius-full);\n  background: var(--glass-bg);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: var(--font-size-2xl);\n}\n\n.author-name {\n  font-weight: 600;\n  color: white;\n  margin-bottom: 0.25rem;\n}\n\n.author-title {\n  font-size: var(--font-size-xs);\n  color: rgba(255, 255, 255, 0.8);\n}\n\n.cta-stats {\n  margin-bottom: var(--spacing-xl);\n}\n\n.stats-grid {\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: var(--spacing-md);\n}\n\n.stat-card {\n  background: var(--glass-bg);\n  backdrop-filter: var(--glass-blur);\n  border: 1px solid var(--glass-border);\n  border-radius: var(--radius-xl);\n  padding: var(--spacing-md);\n  text-align: center;\n  transition: all var(--transition-normal);\n}\n\n.stat-card:hover {\n  transform: translateY(-5px);\n  background: rgba(255, 255, 255, 0.15);\n}\n\n.stat-icon {\n  font-size: var(--font-size-3xl);\n  margin-bottom: 0.75rem;\n  display: block;\n}\n\n.stat-number {\n  font-size: var(--font-size-3xl);\n  font-weight: 700;\n  color: var(--accent-gold);\n  margin-bottom: var(--spacing-xs);\n  display: block;\n}\n\n.stat-label {\n  font-size: var(--font-size-sm);\n  color: rgba(255, 255, 255, 0.8);\n}\n\n.landing-footer {\n  background: rgba(0, 0, 0, 0.3);\n  backdrop-filter: var(--glass-blur);\n  border-top: 1px solid var(--glass-border);\n  color: white;\n}\n\n.footer-content {\n  max-width: var(--container-max-width);\n  margin: 0 auto;\n  padding: var(--spacing-xl) var(--container-padding) var(--spacing-sm);\n}\n\n.footer-main {\n  display: grid;\n  grid-template-columns: 1fr 2fr;\n  gap: var(--spacing-xl);\n  margin-bottom: var(--spacing-lg);\n}\n\n.footer-brand h3 {\n  font-size: var(--font-size-2xl);\n  font-weight: 700;\n  margin-bottom: var(--spacing-xs);\n  background: var(--accent-gradient);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n}\n\n.footer-brand p {\n  opacity: 0.8;\n  margin: 0;\n}\n\n.footer-links {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: var(--spacing-lg);\n}\n\n.link-group h4 {\n  font-size: var(--font-size-base);\n  font-weight: 600;\n  margin-bottom: var(--spacing-sm);\n  color: var(--accent-gold);\n}\n\n.link-group a {\n  display: block;\n  color: rgba(255, 255, 255, 0.8);\n  text-decoration: none;\n  margin-bottom: var(--spacing-xs);\n  transition: color var(--transition-normal);\n}\n\n.link-group a:hover {\n  color: white;\n}\n\n.footer-bottom {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: var(--spacing-lg);\n  border-top: 1px solid var(--glass-border);\n}\n\n.footer-bottom p {\n  margin: 0;\n  opacity: 0.8;\n  font-size: var(--font-size-sm);\n}\n\n.footer-social {\n  display: flex;\n  gap: var(--spacing-sm);\n}\n\n.footer-social a {\n  width: 40px;\n  height: 40px;\n  border-radius: var(--radius-full);\n  background: var(--glass-bg);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-decoration: none;\n  font-size: var(--font-size-lg);\n  transition: all var(--transition-normal);\n}\n\n.footer-social a:hover {\n  background: rgba(255, 255, 255, 0.2);\n  transform: translateY(-2px);\n}\n\n/* Responsive design */\n@media (max-width: 768px) {\n  .cta-container {\n    padding: var(--spacing-3xl) var(--container-padding) 0;\n  }\n\n  .cta-content {\n    grid-template-columns: 1fr;\n    gap: var(--spacing-lg);\n    text-align: center;\n  }\n\n  .cta-title {\n    font-size: var(--font-size-4xl);\n  }\n\n  .cta-description {\n    font-size: var(--font-size-lg);\n  }\n\n  .cta-features {\n    justify-content: center;\n  }\n\n  .stats-grid {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  .footer-main {\n    grid-template-columns: 1fr;\n    gap: var(--spacing-lg);\n  }\n\n  .footer-links {\n    grid-template-columns: 1fr;\n    gap: var(--spacing-md);\n  }\n\n  .footer-bottom {\n    flex-direction: column;\n    gap: var(--spacing-sm);\n    text-align: center;\n  }\n}\n",
                    "styleUrl": "./cta-section.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<section class=\"cta-section\" aria-labelledby=\"cta-main-title\">\n  <div class=\"cta-container\">\n    <div class=\"cta-background\" aria-hidden=\"true\">\n      <div class=\"bg-circle circle-1\"></div>\n      <div class=\"bg-circle circle-2\"></div>\n      <div class=\"bg-circle circle-3\"></div>\n    </div>\n\n    <div class=\"cta-content animate-fade-in-up\">\n      <div class=\"cta-main\">\n        <h2 id=\"cta-main-title\" class=\"cta-title\">\n          ¿Listo para revolucionar tus\n          <span class=\"gradient-text\">exámenes?</span>\n        </h2>\n        <p class=\"cta-description\">\n          Únete a miles de educadores que ya han transformado su proceso de evaluación.\n          Comienza gratis y descubre todo lo que puedes lograr.\n        </p>\n\n        <div class=\"cta-buttons\" role=\"group\" aria-label=\"Acciones para comenzar\">\n          <button\n            class=\"btn btn-primary animate-pulse\"\n            (click)=\"navigateToRegister()\"\n            aria-describedby=\"start-free-desc\">\n            Comenzar gratis\n            <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" aria-hidden=\"true\">\n              <path d=\"M5 12h14M12 5l7 7-7 7\"/>\n            </svg>\n          </button>\n          <span id=\"start-free-desc\" class=\"sr-only\">Crea tu cuenta gratuita para empezar a usar la plataforma</span>\n          <button\n            class=\"btn btn-secondary\"\n            (click)=\"navigateToLogin()\"\n            aria-describedby=\"login-existing-desc\">\n            Ya tengo cuenta\n          </button>\n        </div>\n\n        <div class=\"cta-features\">\n          <div class=\"feature-item\">\n            <span class=\"feature-icon\">✓</span>\n            <span>Sin tarjeta de crédito</span>\n          </div>\n          <div class=\"feature-item\">\n            <span class=\"feature-icon\">✓</span>\n            <span>Setup en 2 minutos</span>\n          </div>\n          <div class=\"feature-item\">\n            <span class=\"feature-icon\">✓</span>\n            <span>Soporte 24/7</span>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"cta-testimonial animate-fade-in-right\" style=\"animation-delay: 0.3s;\">\n        <div class=\"testimonial-card\">\n          <div class=\"testimonial-content\">\n            <div class=\"quote-icon\">\"</div>\n            <p class=\"testimonial-text\">\n              \"Esta plataforma ha transformado completamente mi forma de crear exámenes.\n              Lo que antes me tomaba horas, ahora lo hago en minutos.\"\n            </p>\n          </div>\n          <div class=\"testimonial-author\">\n            <div class=\"author-avatar\">👨‍🏫</div>\n            <div class=\"author-info\">\n              <div class=\"author-name\">Dr. Carlos Martínez</div>\n              <div class=\"author-title\">Profesor de Matemáticas, Universidad Complutense</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"cta-stats animate-fade-in-up\" style=\"animation-delay: 0.6s;\">\n      <div class=\"stats-grid\">\n        <div class=\"stat-card\">\n          <div class=\"stat-icon\">🎯</div>\n          <div class=\"stat-number\">95%</div>\n          <div class=\"stat-label\">Satisfacción</div>\n        </div>\n        <div class=\"stat-card\">\n          <div class=\"stat-icon\">⚡</div>\n          <div class=\"stat-number\">10x</div>\n          <div class=\"stat-label\">Más rápido</div>\n        </div>\n        <div class=\"stat-card\">\n          <div class=\"stat-icon\">👥</div>\n          <div class=\"stat-number\">1000+</div>\n          <div class=\"stat-label\">Educadores</div>\n        </div>\n        <div class=\"stat-card\">\n          <div class=\"stat-icon\">📊</div>\n          <div class=\"stat-number\">50k+</div>\n          <div class=\"stat-label\">Exámenes</div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <footer class=\"landing-footer\">\n    <div class=\"footer-content\">\n      <div class=\"footer-main\">\n        <div class=\"footer-brand\">\n          <h3>ExamScan</h3>\n          <p>Transforma tus exámenes con inteligencia artificial</p>\n        </div>\n\n        <div class=\"footer-links\">\n          <div class=\"link-group\">\n            <h4>Producto</h4>\n            <a href=\"#\">Características</a>\n            <a href=\"#\">Precios</a>\n            <a href=\"#\">Demo</a>\n          </div>\n          <div class=\"link-group\">\n            <h4>Soporte</h4>\n            <a href=\"#\">Documentación</a>\n            <a href=\"#\">API</a>\n            <a href=\"#\">Contacto</a>\n          </div>\n          <div class=\"link-group\">\n            <h4>Empresa</h4>\n            <a href=\"#\">Acerca de</a>\n            <a href=\"#\">Blog</a>\n            <a href=\"#\">Carreras</a>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"footer-bottom\">\n        <p>&copy; 2025 ExamScan. Todos los derechos reservados.</p>\n        <div class=\"footer-social\">\n          <a href=\"#\" aria-label=\"Twitter\">🐦</a>\n          <a href=\"#\" aria-label=\"LinkedIn\">💼</a>\n          <a href=\"#\" aria-label=\"GitHub\">🐙</a>\n        </div>\n      </div>\n    </div>\n  </footer>\n</section>\n"
        },
        {
            "name": "DashboardCardComponent",
            "id": "component-DashboardCardComponent-d7673b643ada5fc2cf2bdfb9b0894d0ec3da81331ca341d7e2afbddfc2dae889779f29ec3a4b1a260ba0d4fced3952bd94141b15f7d94fac41c3bc9fd92b4a55",
            "file": "src/app/features/dashboard/components/dashboard-card/dashboard-card.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dashboard-card",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./dashboard-card.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "buttonText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "required": true
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "required": true
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "required": false
                },
                {
                    "name": "routerLink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "required": false
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "required": true
                }
            ],
            "outputsClass": [
                {
                    "name": "buttonClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "buttonClass",
                    "defaultValue": "input<string>('btn-primary')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "buttonClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "required": false
                },
                {
                    "name": "buttonText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "required": true
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "required": true
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "required": false
                },
                {
                    "name": "icon",
                    "defaultValue": "input<string>('info')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "routerLink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "required": false
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "required": true
                }
            ],
            "methodsClass": [
                {
                    "name": "onButtonClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterLink"
                },
                {
                    "name": "MatCardModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, input, output, ChangeDetectionStrategy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterLink } from '@angular/router';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\n\n@Component({\n  selector: 'app-dashboard-card',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [CommonModule, RouterLink, MatCardModule, MatButtonModule, MatIconModule],\n  templateUrl: './dashboard-card.html',\n  styleUrl: './dashboard-card.css'\n})\nexport class DashboardCardComponent {\n  title = input.required<string>();\n  description = input.required<string>();\n  buttonText = input.required<string>();\n  icon = input<string>('info');\n  routerLink = input<string>();\n  disabled = input<boolean>(false);\n  buttonClass = input<string>('btn-primary');\n  buttonClick = output<void>();\n\n  onButtonClick(): void {\n    if (!this.disabled()) {\n      this.buttonClick.emit();\n    }\n  }\n}\n",
            "styleUrl": "./dashboard-card.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<mat-card class=\"dashboard-card\">\n  <mat-card-header>\n    <div mat-card-avatar>\n      <mat-icon class=\"card-icon\">{{ icon() }}</mat-icon>\n    </div>\n    <mat-card-title>{{ title() }}</mat-card-title>\n  </mat-card-header>\n\n  <mat-card-content>\n    <p>{{ description() }}</p>\n  </mat-card-content>\n\n  <mat-card-actions align=\"end\">\n    @if (routerLink(); as link) {\n      <a mat-raised-button color=\"primary\" [routerLink]=\"link\">\n        {{ buttonText() }}\n      </a>\n    } @else {\n      <button\n        mat-raised-button\n        [color]=\"disabled() ? '' : 'primary'\"\n        [disabled]=\"disabled()\"\n        (click)=\"onButtonClick()\"\n      >\n        {{ buttonText() }}\n      </button>\n    }\n  </mat-card-actions>\n</mat-card>\n"
        },
        {
            "name": "DashboardHeaderComponent",
            "id": "component-DashboardHeaderComponent-19f58803558876b8a45ab424ed1c937b6bb01fcc21d120b765cbdb24474b35434a50bb4076101702b100ad0adc46b93a06fad14be3d0fa877ed2a491b07bd162",
            "file": "src/app/features/dashboard/components/dashboard-header/dashboard-header.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dashboard-header",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./dashboard-header.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "logout",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "logout",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "required": false
                },
                {
                    "name": "user",
                    "defaultValue": "input.required<User | null>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "getRoleLabel",
                    "args": [
                        {
                            "name": "role",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "role",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatToolbarModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatChipsModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, input, output, ChangeDetectionStrategy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\nimport { User } from '../../../../core/models/user.model';\n\n@Component({\n  selector: 'app-dashboard-header',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [CommonModule, MatToolbarModule, MatButtonModule, MatChipsModule, MatIconModule],\n  templateUrl: './dashboard-header.html',\n  styleUrl: './dashboard-header.css'\n})\nexport class DashboardHeaderComponent {\n  user = input.required<User | null>();\n  logout = output<void>();\n\n  getRoleLabel(role: string): string {\n    const labels = {\n      'admin': 'Administrador',\n      'teacher': 'Profesor',\n      'student': 'Estudiante'\n    };\n    return labels[role as keyof typeof labels] || role;\n  }\n\n  onLogout(): void {\n    this.logout.emit();\n  }\n}\n",
            "styleUrl": "./dashboard-header.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<mat-toolbar color=\"primary\" class=\"header\">\n  <span class=\"header-title\">\n    <mat-icon>dashboard</mat-icon>\n    ExamScan Dashboard\n  </span>\n\n  <span class=\"spacer\"></span>\n\n  @if (user(); as currentUser) {\n    <div class=\"user-info\">\n      <span class=\"welcome-text\">Bienvenido, {{ currentUser.name }}</span>\n      <mat-chip-set>\n        <mat-chip [highlighted]=\"true\" [class]=\"'role-chip-' + currentUser.role\">\n          {{ getRoleLabel(currentUser.role) }}\n        </mat-chip>\n      </mat-chip-set>\n      <button mat-raised-button color=\"accent\" (click)=\"onLogout()\">\n        <mat-icon>logout</mat-icon>\n        Cerrar Sesión\n      </button>\n    </div>\n  }\n</mat-toolbar>\n"
        },
        {
            "name": "DashboardPageComponent",
            "id": "component-DashboardPageComponent-ed651a49a8db461f5f3420ed5937d61414007a2cec8add3df42e3a749c341ac3718c0f504192d2b99306540b87ef37ef2d16d82f095beead57fc8fb6eddc0b62",
            "file": "src/app/features/dashboard/pages/dashboard-page/dashboard-page.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dashboard-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./dashboard-page.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "allCards",
                    "defaultValue": "signal<DashboardCard[]>([\n    {\n      id: 'exams',\n      title: 'Exámenes',\n      description: 'Gestiona tus exámenes, crea nuevos o revisa los existentes.',\n      buttonText: 'Ver Exámenes',\n      icon: 'quiz',\n      routerLink: '/exams'\n    },\n    {\n      id: 'ai-processing',\n      title: 'Procesamiento IA',\n      description: 'Sube archivos PDF para extraer preguntas automáticamente.',\n      buttonText: 'Próximamente',\n      icon: 'smart_toy',\n      disabled: true,\n      buttonClass: 'btn-secondary'\n    },\n    {\n      id: 'users',\n      title: 'Usuarios',\n      description: 'Administra usuarios y permisos del sistema.',\n      buttonText: 'Gestionar Usuarios',\n      icon: 'people',\n      routerLink: '/users',\n      requiresRole: ['admin']\n    },\n    {\n      id: 'statistics',\n      title: 'Estadísticas',\n      description: 'Revisa el rendimiento y estadísticas de exámenes.',\n      buttonText: 'Próximamente',\n      icon: 'analytics',\n      disabled: true,\n      buttonClass: 'btn-secondary'\n    }\n  ])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "authService",
                    "defaultValue": "inject(AuthService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "currentUser",
                    "defaultValue": "this.authService.user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "dashboardCards",
                    "defaultValue": "computed(() => {\n    const user = this.currentUser();\n    if (!user) return [];\n\n    return this.allCards().filter(card => {\n      if (!card.requiresRole) return true;\n      return card.requiresRole.includes(user.role);\n    });\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 71
                },
                {
                    "name": "router",
                    "defaultValue": "inject(Router)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "handleCardAction",
                    "args": [
                        {
                            "name": "cardId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "cardId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "DashboardHeaderComponent",
                    "type": "component"
                },
                {
                    "name": "DashboardCardComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, inject, computed, signal, ChangeDetectionStrategy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../../auth/services/auth.service';\nimport { DashboardHeaderComponent } from '../../components/dashboard-header/dashboard-header';\nimport { DashboardCardComponent } from '../../components/dashboard-card/dashboard-card';\n\ninterface DashboardCard {\n  id: string;\n  title: string;\n  description: string;\n  buttonText: string;\n  icon: string;\n  routerLink?: string;\n  disabled?: boolean;\n  buttonClass?: string;\n  requiresRole?: string[];\n}\n\n@Component({\n  selector: 'app-dashboard-page',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [CommonModule, DashboardHeaderComponent, DashboardCardComponent],\n  templateUrl: './dashboard-page.html',\n  styleUrl: './dashboard-page.css'\n})\nexport class DashboardPageComponent {\n  private authService = inject(AuthService);\n  private router = inject(Router);\n\n  currentUser = this.authService.user;\n\n  private allCards = signal<DashboardCard[]>([\n    {\n      id: 'exams',\n      title: 'Exámenes',\n      description: 'Gestiona tus exámenes, crea nuevos o revisa los existentes.',\n      buttonText: 'Ver Exámenes',\n      icon: 'quiz',\n      routerLink: '/exams'\n    },\n    {\n      id: 'ai-processing',\n      title: 'Procesamiento IA',\n      description: 'Sube archivos PDF para extraer preguntas automáticamente.',\n      buttonText: 'Próximamente',\n      icon: 'smart_toy',\n      disabled: true,\n      buttonClass: 'btn-secondary'\n    },\n    {\n      id: 'users',\n      title: 'Usuarios',\n      description: 'Administra usuarios y permisos del sistema.',\n      buttonText: 'Gestionar Usuarios',\n      icon: 'people',\n      routerLink: '/users',\n      requiresRole: ['admin']\n    },\n    {\n      id: 'statistics',\n      title: 'Estadísticas',\n      description: 'Revisa el rendimiento y estadísticas de exámenes.',\n      buttonText: 'Próximamente',\n      icon: 'analytics',\n      disabled: true,\n      buttonClass: 'btn-secondary'\n    }\n  ]);\n\n  dashboardCards = computed(() => {\n    const user = this.currentUser();\n    if (!user) return [];\n\n    return this.allCards().filter(card => {\n      if (!card.requiresRole) return true;\n      return card.requiresRole.includes(user.role);\n    });\n  });\n\n  handleLogout(): void {\n    this.authService.logout();\n    this.router.navigate(['/login']);\n  }\n\n  handleCardAction(cardId: string): void {\n    // Handle custom card actions if needed\n    console.log(`Card action triggered: ${cardId}`);\n  }\n}\n",
            "styleUrl": "./dashboard-page.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"dashboard\">\n  <app-dashboard-header\n    [user]=\"currentUser()\"\n    (logout)=\"handleLogout()\"\n  />\n\n  <main class=\"main-content\">\n    <div class=\"dashboard-grid\">\n      @for (card of dashboardCards(); track card.id) {\n        <app-dashboard-card\n          [title]=\"card.title\"\n          [description]=\"card.description\"\n          [buttonText]=\"card.buttonText\"\n          [icon]=\"card.icon\"\n          [routerLink]=\"card.routerLink\"\n          [disabled]=\"card.disabled ?? false\"\n          [buttonClass]=\"card.buttonClass ?? 'btn-primary'\"\n          (buttonClick)=\"handleCardAction(card.id)\"\n        />\n      }\n    </div>\n  </main>\n</div>\n"
        },
        {
            "name": "DemoSectionComponent",
            "id": "component-DemoSectionComponent-4c2c0dd1c3eeabf27a02d9428b9130f5852592df07da28ac1506639d2682a3ebbb31219e56d7d53e6b008082b76236ddc00cc7a2178e0db5954afa58618c0601",
            "file": "src/app/features/landing/components/demo-section/demo-section.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-demo-section",
            "styleUrls": [
                "./demo-section.css"
            ],
            "styles": [],
            "templateUrl": [
                "./demo-section.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeStep",
                    "defaultValue": "signal(1)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "steps",
                    "defaultValue": "[\n    {\n      id: 1,\n      title: 'Sube tu PDF',\n      description: 'Arrastra y suelta tu archivo PDF de examen. Soportamos hasta 200 páginas y 20MB.',\n      visual: 'upload'\n    },\n    {\n      id: 2,\n      title: 'IA extrae preguntas',\n      description: 'Nuestros algoritmos analizan el contenido y identifican preguntas y respuestas automáticamente.',\n      visual: 'processing'\n    },\n    {\n      id: 3,\n      title: 'Revisa y edita',\n      description: 'Valida las preguntas extraídas, realiza ajustes y añade tus propias preguntas.',\n      visual: 'editing'\n    },\n    {\n      id: 4,\n      title: 'Publica y comparte',\n      description: 'Configura tu examen, establece tiempos y compártelo con tus estudiantes.',\n      visual: 'sharing'\n    }\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DemoStep[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "getVisualDescription",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectStep",
                    "args": [
                        {
                            "name": "stepId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "stepId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, signal } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\ninterface DemoStep {\n  id: number;\n  title: string;\n  description: string;\n  visual: string;\n}\n\n@Component({\n  selector: 'app-demo-section',\n  templateUrl: './demo-section.html',\n  styleUrls: ['./demo-section.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [CommonModule]\n})\nexport class DemoSectionComponent {\n\n  activeStep = signal(1);\n\n  steps: DemoStep[] = [\n    {\n      id: 1,\n      title: 'Sube tu PDF',\n      description: 'Arrastra y suelta tu archivo PDF de examen. Soportamos hasta 200 páginas y 20MB.',\n      visual: 'upload'\n    },\n    {\n      id: 2,\n      title: 'IA extrae preguntas',\n      description: 'Nuestros algoritmos analizan el contenido y identifican preguntas y respuestas automáticamente.',\n      visual: 'processing'\n    },\n    {\n      id: 3,\n      title: 'Revisa y edita',\n      description: 'Valida las preguntas extraídas, realiza ajustes y añade tus propias preguntas.',\n      visual: 'editing'\n    },\n    {\n      id: 4,\n      title: 'Publica y comparte',\n      description: 'Configura tu examen, establece tiempos y compártelo con tus estudiantes.',\n      visual: 'sharing'\n    }\n  ];\n\n  selectStep(stepId: number): void {\n    this.activeStep.set(stepId);\n  }\n\n  getVisualDescription(): string {\n    const step = this.steps.find(s => s.id === this.activeStep());\n    switch (step?.visual) {\n      case 'upload':\n        return 'Demostración visual del proceso de subida de archivo PDF con barra de progreso';\n      case 'processing':\n        return 'Animación del cerebro artificial procesando el documento con ondas de actividad';\n      case 'editing':\n        return 'Interfaz de edición mostrando preguntas extraídas con opciones de respuesta';\n      case 'sharing':\n        return 'Tarjeta de examen publicado con estadísticas y opciones de compartir';\n      default:\n        return 'Demostración visual del paso actual del proceso';\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".demo-section {\n  padding: var(--section-padding) 0;\n  background: var(--secondary-gradient);\n  color: white;\n  position: relative;\n  overflow: hidden;\n}\n\n.demo-section::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: radial-gradient(circle at 20% 80%, rgba(102, 126, 234, 0.1) 0%, transparent 50%),\n              radial-gradient(circle at 80% 20%, rgba(118, 75, 162, 0.1) 0%, transparent 50%);\n  pointer-events: none;\n}\n\n.demo-container {\n  max-width: var(--container-max-width);\n  margin: 0 auto;\n  padding: 0 var(--container-padding);\n  position: relative;\n  z-index: 1;\n}\n\n.demo-header {\n  text-align: center;\n  margin-bottom: var(--spacing-4xl);\n}\n\n.demo-title {\n  font-size: var(--font-size-6xl);\n  font-weight: 700;\n  line-height: 1.2;\n  margin-bottom: var(--spacing-lg);\n}\n\n.gradient-text {\n  background: var(--accent-gradient);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n}\n\n.demo-description {\n  font-size: var(--font-size-xl);\n  line-height: 1.6;\n  opacity: 0.9;\n  max-width: 600px;\n  margin: 0 auto;\n}\n\n.demo-content {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: var(--spacing-4xl);\n  align-items: center;\n  margin-bottom: var(--spacing-2xl);\n}\n\n.demo-steps {\n  display: flex;\n  flex-direction: column;\n  gap: var(--spacing-lg);\n}\n\n.steps-list {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  gap: var(--spacing-lg);\n}\n\n.step-item-wrapper {\n  margin: 0;\n  padding: 0;\n}\n\n.step-item {\n  display: flex;\n  align-items: flex-start;\n  gap: var(--spacing-lg);\n  padding: var(--spacing-lg);\n  border-radius: var(--radius-lg);\n  cursor: pointer;\n  transition: all var(--transition-normal);\n  position: relative;\n  background: var(--glass-bg);\n  border: 1px solid var(--glass-border);\n  width: 100%;\n  text-align: left;\n  color: inherit;\n  font-family: inherit;\n}\n\n.step-item:focus {\n  outline: 2px solid var(--accent-gold);\n  outline-offset: 2px;\n  box-shadow: 0 0 0 4px rgba(255, 215, 0, 0.3);\n}\n\n.step-item:hover,\n.step-item.active {\n  background: rgba(102, 126, 234, 0.2);\n  border-color: rgba(102, 126, 234, 0.3);\n  transform: translateX(8px);\n}\n\n.step-number {\n  width: 40px;\n  height: 40px;\n  border-radius: var(--radius-full);\n  background: var(--primary-gradient);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: 700;\n  font-size: var(--font-size-lg);\n  flex-shrink: 0;\n}\n\n.step-item.active .step-number {\n  background: var(--accent-gradient);\n  color: #1e293b;\n}\n\n.step-content {\n  flex: 1;\n}\n\n.step-title {\n  font-size: var(--font-size-xl);\n  font-weight: 600;\n  margin-bottom: var(--spacing-xs);\n}\n\n.step-description {\n  font-size: var(--font-size-sm);\n  opacity: 0.8;\n  line-height: 1.5;\n}\n\n.step-indicator {\n  width: 8px;\n  height: 8px;\n  border-radius: var(--radius-full);\n  background: rgba(255, 255, 255, 0.3);\n  transition: all var(--transition-normal);\n}\n\n.step-item.active .step-indicator {\n  background: var(--accent-gold);\n  box-shadow: 0 0 12px rgba(255, 215, 0, 0.6);\n}\n\n.demo-visual {\n  background: white;\n  border-radius: var(--radius-xl);\n  padding: var(--spacing-xl);\n  box-shadow: var(--shadow-xl);\n  min-height: 400px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n/* Upload Visual */\n.visual-upload {\n  width: 100%;\n}\n\n.upload-area {\n  border: 2px dashed #d1d5db;\n  border-radius: var(--radius-md);\n  padding: var(--spacing-xl);\n  text-align: center;\n  background: #f9fafb;\n  transition: all var(--transition-normal);\n  position: relative;\n}\n\n.upload-icon {\n  font-size: var(--font-size-6xl);\n  margin-bottom: var(--spacing-md);\n}\n\n.upload-text h4 {\n  font-size: var(--font-size-xl);\n  font-weight: 600;\n  color: #374151;\n  margin-bottom: var(--spacing-xs);\n}\n\n.upload-text p {\n  color: #6b7280;\n}\n\n.upload-file {\n  position: absolute;\n  bottom: -20px;\n  right: 20px;\n  background: white;\n  border-radius: var(--radius-md);\n  padding: var(--spacing-md);\n  box-shadow: var(--shadow-md);\n  display: flex;\n  align-items: center;\n  gap: var(--spacing-md);\n  min-width: 200px;\n}\n\n.file-icon {\n  font-size: var(--font-size-lg);\n}\n\n.file-info {\n  flex: 1;\n}\n\n.file-name {\n  font-weight: 500;\n  font-size: var(--font-size-sm);\n  color: #374151;\n}\n\n.file-size {\n  font-size: var(--font-size-xs);\n  color: #6b7280;\n}\n\n.file-progress {\n  width: 100%;\n  height: 4px;\n  background: #e5e7eb;\n  border-radius: var(--radius-xs);\n  overflow: hidden;\n  margin-top: var(--spacing-xs);\n}\n\n.progress-bar {\n  height: 100%;\n  background: var(--primary-gradient);\n  width: 75%;\n  animation: progress 2s ease-in-out infinite;\n}\n\n@keyframes progress {\n  0%, 100% { width: 75%; }\n  50% { width: 85%; }\n}\n\n/* Processing Visual */\n.visual-processing {\n  width: 100%;\n  text-align: center;\n}\n\n.processing-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: var(--spacing-xl);\n}\n\n.ai-brain {\n  position: relative;\n  width: 120px;\n  height: 120px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.brain-core {\n  font-size: var(--font-size-6xl);\n  background: var(--primary-gradient);\n  border-radius: var(--radius-full);\n  width: 80px;\n  height: 80px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  z-index: 2;\n}\n\n.brain-waves {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n.wave {\n  position: absolute;\n  border: 2px solid #667eea;\n  border-radius: var(--radius-full);\n  opacity: 0.7;\n  animation: pulse-wave 2s ease-in-out infinite;\n}\n\n.wave-1 {\n  width: 80px;\n  height: 80px;\n  animation-delay: 0s;\n}\n\n.wave-2 {\n  width: 100px;\n  height: 100px;\n  animation-delay: 0.5s;\n}\n\n.wave-3 {\n  width: 120px;\n  height: 120px;\n  animation-delay: 1s;\n}\n\n@keyframes pulse-wave {\n  0% {\n    transform: translate(-50%, -50%) scale(0.8);\n    opacity: 1;\n  }\n  100% {\n    transform: translate(-50%, -50%) scale(1.2);\n    opacity: 0;\n  }\n}\n\n.processing-text h4 {\n  font-size: var(--font-size-xl);\n  font-weight: 600;\n  color: #374151;\n  margin-bottom: var(--spacing-md);\n}\n\n.processing-steps {\n  display: flex;\n  flex-direction: column;\n  gap: var(--spacing-xs);\n  text-align: left;\n}\n\n.process-step {\n  padding: var(--spacing-xs);\n  border-radius: var(--radius-sm);\n  font-size: var(--font-size-sm);\n  transition: all var(--transition-normal);\n}\n\n.process-step.completed {\n  background: #d1fae5;\n  color: #065f46;\n}\n\n.process-step.active {\n  background: #dbeafe;\n  color: #1e40af;\n  animation: pulse 1s ease-in-out infinite;\n}\n\n/* Editing Visual */\n.visual-editing {\n  width: 100%;\n}\n\n.editor-interface {\n  background: #f9fafb;\n  border-radius: var(--radius-md);\n  overflow: hidden;\n  border: 1px solid #e5e7eb;\n}\n\n.editor-header {\n  background: #667eea;\n  color: white;\n  padding: var(--spacing-md);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.editor-header h4 {\n  margin: 0;\n  font-size: var(--font-size-lg);\n}\n\n.question-count {\n  background: rgba(255, 255, 255, 0.2);\n  padding: var(--spacing-xs) var(--spacing-sm);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-xs);\n}\n\n.question-editor {\n  padding: var(--spacing-lg);\n}\n\n.question-item {\n  background: white;\n  border-radius: var(--radius-md);\n  padding: var(--spacing-lg);\n  border: 1px solid #e5e7eb;\n}\n\n.question-text {\n  font-weight: 500;\n  color: #374151;\n  margin-bottom: var(--spacing-md);\n  font-size: var(--font-size-base);\n}\n\n.options-list {\n  display: flex;\n  flex-direction: column;\n  gap: var(--spacing-sm);\n}\n\n.option-item {\n  display: flex;\n  align-items: center;\n  gap: var(--spacing-sm);\n  padding: var(--spacing-sm);\n  border-radius: var(--radius-sm);\n  border: 1px solid #e5e7eb;\n  transition: all var(--transition-normal);\n}\n\n.option-item.correct {\n  background: #d1fae5;\n  border-color: #10b981;\n}\n\n.option-letter {\n  font-weight: 600;\n  color: #6b7280;\n  min-width: 20px;\n}\n\n.option-text {\n  flex: 1;\n  color: #374151;\n}\n\n.correct-badge {\n  color: #10b981;\n  font-weight: 600;\n}\n\n/* Sharing Visual */\n.visual-sharing {\n  width: 100%;\n}\n\n.sharing-interface {\n  display: flex;\n  justify-content: center;\n}\n\n.exam-card {\n  background: white;\n  border-radius: var(--radius-md);\n  overflow: hidden;\n  box-shadow: var(--shadow-md);\n  width: 100%;\n  max-width: 300px;\n}\n\n.exam-header {\n  background: var(--primary-gradient);\n  color: white;\n  padding: var(--spacing-lg);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.exam-header h4 {\n  margin: 0;\n  font-size: var(--font-size-xl);\n}\n\n.exam-status.published {\n  background: rgba(16, 185, 129, 0.2);\n  color: #10b981;\n  padding: var(--spacing-xs) var(--spacing-sm);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-xs);\n  font-weight: 500;\n}\n\n.exam-stats {\n  display: flex;\n  justify-content: space-around;\n  padding: var(--spacing-lg);\n  background: #f9fafb;\n}\n\n.stat {\n  text-align: center;\n}\n\n.stat-number {\n  display: block;\n  font-size: var(--font-size-xl);\n  font-weight: 700;\n  color: #374151;\n}\n\n.stat-label {\n  font-size: var(--font-size-xs);\n  color: #6b7280;\n}\n\n.sharing-options {\n  padding: var(--spacing-md);\n  display: flex;\n  flex-direction: column;\n  gap: var(--spacing-sm);\n}\n\n.share-btn {\n  background: #f3f4f6;\n  border: 1px solid #d1d5db;\n  padding: var(--spacing-sm);\n  border-radius: var(--radius-sm);\n  font-size: var(--font-size-sm);\n  cursor: pointer;\n  transition: all var(--transition-normal);\n  color: #374151;\n}\n\n.share-btn:hover {\n  background: #e5e7eb;\n}\n\n.demo-cta {\n  text-align: center;\n}\n\n.demo-cta-button {\n  background: var(--accent-gradient);\n  color: #1e293b;\n  border: none;\n  padding: var(--spacing-lg) var(--spacing-3xl);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-lg);\n  font-weight: 600;\n  cursor: pointer;\n  transition: all var(--transition-normal);\n  display: inline-flex;\n  align-items: center;\n  gap: var(--spacing-xs);\n  box-shadow: var(--shadow-accent);\n}\n\n.demo-cta-button:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 8px 25px rgba(255, 215, 0, 0.6);\n}\n\n.demo-cta-button svg {\n  width: 20px;\n  height: 20px;\n  transition: transform var(--transition-normal);\n}\n\n.demo-cta-button:hover svg {\n  transform: translateX(4px);\n}\n\n/* Responsive design */\n@media (max-width: 768px) {\n  .demo-content {\n    grid-template-columns: 1fr;\n    gap: var(--spacing-xl);\n  }\n\n  .demo-title {\n    font-size: var(--font-size-4xl);\n  }\n\n  .demo-description {\n    font-size: var(--font-size-lg);\n  }\n\n  .step-item {\n    padding: var(--spacing-md);\n  }\n\n  .demo-visual {\n    min-height: 300px;\n    padding: var(--spacing-lg);\n  }\n}\n",
                    "styleUrl": "./demo-section.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<section class=\"demo-section\" aria-labelledby=\"demo-title\">\n  <div class=\"demo-container\">\n    <header class=\"demo-header animate-fade-in-up\">\n      <h2 id=\"demo-title\" class=\"demo-title\">\n        Así de <span class=\"gradient-text\">simple</span> es crear un examen\n      </h2>\n      <p class=\"demo-description\">\n        En solo 4 pasos transforma tu PDF en un examen interactivo listo para usar\n      </p>\n    </header>\n\n    <div class=\"demo-content\">\n      <nav class=\"demo-steps\" aria-label=\"Pasos del proceso de creación de exámenes\">\n        <ol class=\"steps-list\" role=\"list\">\n          @for (step of steps; track step.id; let i = $index) {\n            <li class=\"step-item-wrapper\">\n              <button\n                class=\"step-item animate-fade-in-left\"\n                [style.animation-delay]=\"(i * 0.2) + 's'\"\n                [class.active]=\"activeStep() === step.id\"\n                (click)=\"selectStep(step.id)\"\n                [attr.aria-label]=\"'Paso ' + step.id + ': ' + step.title\"\n                [attr.aria-describedby]=\"'step-desc-' + step.id\"\n                [attr.aria-pressed]=\"activeStep() === step.id\"\n                type=\"button\">\n                <div class=\"step-number\" aria-hidden=\"true\">{{ step.id }}</div>\n                <div class=\"step-content\">\n                  <h3 class=\"step-title\">{{ step.title }}</h3>\n                  <p [id]=\"'step-desc-' + step.id\" class=\"step-description\">{{ step.description }}</p>\n                </div>\n                <div class=\"step-indicator\" aria-hidden=\"true\"></div>\n              </button>\n            </li>\n          }\n        </ol>\n      </nav>\n\n      <div class=\"demo-visual animate-fade-in-right\"\n           role=\"img\"\n           [attr.aria-label]=\"getVisualDescription()\"\n           [attr.aria-describedby]=\"'visual-desc-' + activeStep()\">\n        @switch (activeStep()) {\n          @case (1) {\n            <div class=\"visual-upload\">\n              <div class=\"upload-area\">\n                <div class=\"upload-icon\">📄</div>\n                <div class=\"upload-text\">\n                  <h4>Arrastra tu PDF aquí</h4>\n                  <p>o haz clic para seleccionar</p>\n                </div>\n                <div class=\"upload-file\">\n                  <div class=\"file-icon\">📄</div>\n                  <div class=\"file-info\">\n                    <div class=\"file-name\">examen_matematicas.pdf</div>\n                    <div class=\"file-size\">2.4 MB</div>\n                  </div>\n                  <div class=\"file-progress\">\n                    <div class=\"progress-bar\"></div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          }\n          @case (2) {\n            <div class=\"visual-processing\">\n              <div class=\"processing-container\">\n                <div class=\"ai-brain\">\n                  <div class=\"brain-core\">🤖</div>\n                  <div class=\"brain-waves\">\n                    <div class=\"wave wave-1\"></div>\n                    <div class=\"wave wave-2\"></div>\n                    <div class=\"wave wave-3\"></div>\n                  </div>\n                </div>\n                <div class=\"processing-text\">\n                  <h4>Analizando contenido...</h4>\n                  <div class=\"processing-steps\">\n                    <div class=\"process-step completed\">✓ Texto extraído</div>\n                    <div class=\"process-step completed\">✓ Preguntas identificadas</div>\n                    <div class=\"process-step active\">⟳ Opciones procesadas</div>\n                    <div class=\"process-step\">◯ Validación final</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          }\n          @case (3) {\n            <div class=\"visual-editing\">\n              <div class=\"editor-interface\">\n                <div class=\"editor-header\">\n                  <h4>Editor de preguntas</h4>\n                  <span class=\"question-count\">25 preguntas encontradas</span>\n                </div>\n                <div class=\"question-editor\">\n                  <div class=\"question-item\">\n                    <div class=\"question-text\">\n                      ¿Cuál es la derivada de la función f(x) = x²?\n                    </div>\n                    <div class=\"options-list\">\n                      <div class=\"option-item correct\">\n                        <span class=\"option-letter\">a)</span>\n                        <span class=\"option-text\">2x</span>\n                        <span class=\"correct-badge\">✓</span>\n                      </div>\n                      <div class=\"option-item\">\n                        <span class=\"option-letter\">b)</span>\n                        <span class=\"option-text\">x²</span>\n                      </div>\n                      <div class=\"option-item\">\n                        <span class=\"option-letter\">c)</span>\n                        <span class=\"option-text\">2x²</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          }\n          @case (4) {\n            <div class=\"visual-sharing\">\n              <div class=\"sharing-interface\">\n                <div class=\"exam-card\">\n                  <div class=\"exam-header\">\n                    <h4>Examen de Matemáticas</h4>\n                    <span class=\"exam-status published\">Publicado</span>\n                  </div>\n                  <div class=\"exam-stats\">\n                    <div class=\"stat\">\n                      <span class=\"stat-number\">25</span>\n                      <span class=\"stat-label\">Preguntas</span>\n                    </div>\n                    <div class=\"stat\">\n                      <span class=\"stat-number\">45min</span>\n                      <span class=\"stat-label\">Duración</span>\n                    </div>\n                    <div class=\"stat\">\n                      <span class=\"stat-number\">127</span>\n                      <span class=\"stat-label\">Estudiantes</span>\n                    </div>\n                  </div>\n                  <div class=\"sharing-options\">\n                    <button class=\"share-btn\">🔗 Copiar enlace</button>\n                    <button class=\"share-btn\">📧 Enviar por email</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          }\n        }\n      </div>\n    </div>\n\n    <div class=\"demo-cta animate-fade-in-up\" style=\"animation-delay: 1s;\">\n      <button class=\"demo-cta-button\">\n        Prueba el proceso completo\n        <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n          <path d=\"M9 18l6-6-6-6\"/>\n        </svg>\n      </button>\n    </div>\n  </div>\n</section>\n"
        },
        {
            "name": "FeaturesSectionComponent",
            "id": "component-FeaturesSectionComponent-d98668aedece7ef1669e9dd6532e107d9dbfb07adadf7f686d66e789ee4828d601e6377ea0a23d84ec75e2f66055bcbc74cb63b31b222f704685bf36c43f0ccf",
            "file": "src/app/features/landing/components/features-section/features-section.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-features-section",
            "styleUrls": [
                "./features-section.css"
            ],
            "styles": [],
            "templateUrl": [
                "./features-section.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "features",
                    "defaultValue": "[\n    {\n      icon: '🤖',\n      title: 'Extracción con IA',\n      description: 'Nuestros modelos de IA extraen automáticamente preguntas y respuestas de tus PDFs con 95% de precisión.',\n      color: 'from-blue-500 to-purple-600'\n    },\n    {\n      icon: '✏️',\n      title: 'Edición Colaborativa',\n      description: 'Crea y edita exámenes en equipo con comentarios en tiempo real y control de versiones.',\n      color: 'from-green-500 to-blue-500'\n    },\n    {\n      icon: '📊',\n      title: 'Análisis Avanzado',\n      description: 'Obtén estadísticas detalladas sobre el rendimiento de los estudiantes y la dificultad de las preguntas.',\n      color: 'from-purple-500 to-pink-500'\n    },\n    {\n      icon: '🎯',\n      title: 'Exámenes Interactivos',\n      description: 'Diseña exámenes con temporizador, navegación intuitiva y feedback inmediato.',\n      color: 'from-orange-500 to-red-500'\n    },\n    {\n      icon: '🔒',\n      title: 'Seguridad Total',\n      description: 'Protección de datos con cifrado TLS, autenticación JWT y control de acceso granular.',\n      color: 'from-indigo-500 to-blue-600'\n    },\n    {\n      icon: '📱',\n      title: 'Multiplataforma',\n      description: 'Accede desde cualquier dispositivo con nuestra interfaz responsive y optimizada.',\n      color: 'from-pink-500 to-rose-500'\n    }\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Feature[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\ninterface Feature {\n  icon: string;\n  title: string;\n  description: string;\n  color: string;\n}\n\n@Component({\n  selector: 'app-features-section',\n  templateUrl: './features-section.html',\n  styleUrls: ['./features-section.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [CommonModule]\n})\nexport class FeaturesSectionComponent {\n\n  features: Feature[] = [\n    {\n      icon: '🤖',\n      title: 'Extracción con IA',\n      description: 'Nuestros modelos de IA extraen automáticamente preguntas y respuestas de tus PDFs con 95% de precisión.',\n      color: 'from-blue-500 to-purple-600'\n    },\n    {\n      icon: '✏️',\n      title: 'Edición Colaborativa',\n      description: 'Crea y edita exámenes en equipo con comentarios en tiempo real y control de versiones.',\n      color: 'from-green-500 to-blue-500'\n    },\n    {\n      icon: '📊',\n      title: 'Análisis Avanzado',\n      description: 'Obtén estadísticas detalladas sobre el rendimiento de los estudiantes y la dificultad de las preguntas.',\n      color: 'from-purple-500 to-pink-500'\n    },\n    {\n      icon: '🎯',\n      title: 'Exámenes Interactivos',\n      description: 'Diseña exámenes con temporizador, navegación intuitiva y feedback inmediato.',\n      color: 'from-orange-500 to-red-500'\n    },\n    {\n      icon: '🔒',\n      title: 'Seguridad Total',\n      description: 'Protección de datos con cifrado TLS, autenticación JWT y control de acceso granular.',\n      color: 'from-indigo-500 to-blue-600'\n    },\n    {\n      icon: '📱',\n      title: 'Multiplataforma',\n      description: 'Accede desde cualquier dispositivo con nuestra interfaz responsive y optimizada.',\n      color: 'from-pink-500 to-rose-500'\n    }\n  ];\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".features-section {\n  padding: var(--section-padding) 0;\n  background: linear-gradient(180deg, var(--bg-light) 0%, var(--bg-gray) 100%);\n  position: relative;\n}\n\n.features-section::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 100px;\n  background: linear-gradient(180deg, rgba(118, 75, 162, 0.1) 0%, transparent 100%);\n}\n\n.features-container {\n  max-width: var(--container-max-width);\n  margin: 0 auto;\n  padding: 0 var(--container-padding);\n}\n\n.features-header {\n  text-align: center;\n  margin-bottom: var(--spacing-2xl);\n}\n\n.features-title {\n  font-size: var(--font-size-5xl);\n  font-weight: 700;\n  line-height: 1.2;\n  margin-bottom: var(--spacing-md);\n  color: var(--text-dark);\n}\n\n.gradient-text {\n  background: var(--primary-gradient);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n}\n\n.features-description {\n  font-size: var(--font-size-xl);\n  line-height: 1.6;\n  color: var(--text-medium);\n  max-width: 600px;\n  margin: 0 auto;\n}\n\n.features-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n  gap: var(--spacing-lg);\n  margin-bottom: var(--spacing-2xl);\n}\n\n.feature-card {\n  background: white;\n  border-radius: var(--radius-2xl);\n  padding: 2.5rem;\n  position: relative;\n  overflow: hidden;\n  box-shadow: var(--shadow-sm);\n  transition: all var(--transition-normal);\n  border: 1px solid rgba(226, 232, 240, 0.8);\n}\n\n.feature-card:hover {\n  transform: translateY(-8px);\n  box-shadow: var(--shadow-md);\n}\n\n.feature-card:hover .feature-hover-effect {\n  opacity: 1;\n  transform: scale(1);\n}\n\n.feature-hover-effect {\n  position: absolute;\n  top: -50%;\n  right: -50%;\n  width: 200%;\n  height: 200%;\n  background: radial-gradient(circle, rgba(102, 126, 234, 0.05) 0%, transparent 70%);\n  opacity: 0;\n  transform: scale(0.8);\n  transition: all var(--transition-slow);\n  pointer-events: none;\n}\n\n.feature-icon {\n  width: 80px;\n  height: 80px;\n  border-radius: var(--radius-2xl);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: var(--font-size-3xl);\n  margin-bottom: var(--spacing-md);\n  position: relative;\n  overflow: hidden;\n}\n\n.feature-icon::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: inherit;\n  opacity: 0.9;\n}\n\n.feature-icon span {\n  position: relative;\n  z-index: 1;\n}\n\n.feature-title {\n  font-size: var(--font-size-2xl);\n  font-weight: 600;\n  color: var(--text-dark);\n  margin-bottom: var(--spacing-sm);\n}\n\n.feature-description {\n  font-size: var(--font-size-base);\n  line-height: 1.6;\n  color: var(--text-medium);\n}\n\n.features-cta {\n  background: var(--primary-gradient);\n  border-radius: 24px;\n  padding: var(--spacing-xl);\n  text-align: center;\n  position: relative;\n  overflow: hidden;\n}\n\n.features-cta::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: radial-gradient(circle at 30% 70%, rgba(255, 255, 255, 0.1) 0%, transparent 50%),\n              radial-gradient(circle at 70% 30%, rgba(255, 255, 255, 0.1) 0%, transparent 50%);\n  pointer-events: none;\n}\n\n.cta-content {\n  position: relative;\n  z-index: 1;\n}\n\n.cta-content h3 {\n  font-size: var(--font-size-3xl);\n  font-weight: 700;\n  color: white;\n  margin-bottom: var(--spacing-sm);\n}\n\n.cta-content p {\n  font-size: var(--font-size-lg);\n  color: rgba(255, 255, 255, 0.9);\n  margin-bottom: var(--spacing-lg);\n}\n\n.cta-button {\n  background: var(--glass-bg);\n  color: white;\n  border: 2px solid var(--glass-border);\n  padding: var(--spacing-sm) var(--spacing-lg);\n  border-radius: var(--radius-lg);\n  font-size: var(--font-size-lg);\n  font-weight: 600;\n  cursor: pointer;\n  transition: all var(--transition-normal);\n  display: inline-flex;\n  align-items: center;\n  gap: var(--spacing-xs);\n  backdrop-filter: var(--glass-blur);\n}\n\n.cta-button:hover {\n  background: rgba(255, 255, 255, 0.3);\n  border-color: rgba(255, 255, 255, 0.5);\n  transform: translateY(-2px);\n}\n\n.cta-button svg {\n  width: 20px;\n  height: 20px;\n  transition: transform var(--transition-normal);\n}\n\n.cta-button:hover svg {\n  transform: translateX(4px);\n}\n\n/* Gradient background classes */\n.bg-gradient-to-r.from-blue-500.to-purple-600 {\n  background: linear-gradient(to right, #3b82f6, #9333ea);\n}\n\n.bg-gradient-to-r.from-green-500.to-blue-500 {\n  background: linear-gradient(to right, #10b981, #3b82f6);\n}\n\n.bg-gradient-to-r.from-purple-500.to-pink-500 {\n  background: linear-gradient(to right, #8b5cf6, #ec4899);\n}\n\n.bg-gradient-to-r.from-orange-500.to-red-500 {\n  background: linear-gradient(to right, #f97316, #ef4444);\n}\n\n.bg-gradient-to-r.from-indigo-500.to-blue-600 {\n  background: linear-gradient(to right, #6366f1, #2563eb);\n}\n\n.bg-gradient-to-r.from-pink-500.to-rose-500 {\n  background: linear-gradient(to right, #ec4899, #f43f5e);\n}\n\n/* Responsive design */\n@media (max-width: 768px) {\n  .features-section {\n    padding: var(--spacing-3xl) 0;\n  }\n\n  .features-title {\n    font-size: var(--font-size-4xl);\n  }\n\n  .features-description {\n    font-size: var(--font-size-lg);\n  }\n\n  .features-grid {\n    grid-template-columns: 1fr;\n    gap: var(--spacing-md);\n  }\n\n  .feature-card {\n    padding: var(--spacing-lg);\n  }\n\n  .features-cta {\n    padding: var(--spacing-lg);\n  }\n\n  .cta-content h3 {\n    font-size: var(--font-size-2xl);\n  }\n}\n",
                    "styleUrl": "./features-section.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<section class=\"features-section\" aria-labelledby=\"features-title\">\n  <div class=\"features-container\">\n    <header class=\"features-header animate-fade-in-up\">\n      <h2 id=\"features-title\" class=\"features-title\">\n        Potencia tu proceso de evaluación con\n        <span class=\"gradient-text\">tecnología avanzada</span>\n      </h2>\n      <p class=\"features-description\">\n        Descubre cómo nuestra plataforma revoluciona la creación y gestión de exámenes\n        con herramientas inteligentes y colaborativas.\n      </p>\n    </header>\n\n    <div class=\"features-grid\" role=\"list\" aria-label=\"Lista de características principales\">\n      @for (feature of features; track feature.title; let i = $index) {\n        <article\n          class=\"feature-card animate-fade-in-up\"\n          [style.animation-delay]=\"(i * 0.1) + 's'\"\n          role=\"listitem\"\n          [attr.aria-labelledby]=\"'feature-title-' + i\"\n          [attr.aria-describedby]=\"'feature-desc-' + i\">\n          <div class=\"feature-icon\" [class]=\"'bg-gradient-to-r ' + feature.color\" aria-hidden=\"true\">\n            <span>{{ feature.icon }}</span>\n          </div>\n          <h3 [id]=\"'feature-title-' + i\" class=\"feature-title\">{{ feature.title }}</h3>\n          <p [id]=\"'feature-desc-' + i\" class=\"feature-description\">{{ feature.description }}</p>\n          <div class=\"feature-hover-effect\" aria-hidden=\"true\"></div>\n        </article>\n      }\n    </div>\n\n    <section class=\"features-cta animate-fade-in-up\" style=\"animation-delay: 0.8s;\" aria-labelledby=\"cta-title\">\n      <div class=\"cta-content\">\n        <h3 id=\"cta-title\">¿Listo para transformar tus exámenes?</h3>\n        <p>Únete a más de 1,000 educadores que ya confían en nuestra plataforma</p>\n        <button class=\"cta-button\" aria-describedby=\"cta-button-desc\">\n          Prueba todas las funciones\n          <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" aria-hidden=\"true\">\n            <path d=\"M5 12h14M12 5l7 7-7 7\"/>\n          </svg>\n        </button>\n        <span id=\"cta-button-desc\" class=\"sr-only\">Accede a una prueba gratuita de todas las funcionalidades de la plataforma</span>\n      </div>\n    </section>\n  </div>\n</section>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-48b9abe37706bc42f20cfa97ed9f943678344ea7d254c0c82183c657750c2191b43486fe730c778627b2ea6aa0e2f33a7abcf3ce08b68ad18b062ad99ea97acb",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>  <div class=\"storybook-header\">\n    <div>\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n            fill=\"#FFF\"\n          />\n          <path\n            d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n            fill=\"#555AB9\"\n          />\n          <path d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\" fill=\"#91BAF8\" />\n        </g>\n      </svg>\n      <h1>Acme</h1>\n    </div>\n    <div>\n      <div *ngIf=\"user\">\n        <span class=\"welcome\">\n          Welcome, <b>{{ user.name }}</b\n          >!\n        </span>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n      </div>\n      <div *ngIf=\"!user\">\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          class=\"margin-left\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          [primary]=\"true\"\n          class=\"margin-left\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </div>\n</header>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 75,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ButtonComponent } from './button.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-header',\n  standalone: true,\n  imports: [CommonModule, ButtonComponent],\n  template: `<header>\n  <div class=\"storybook-header\">\n    <div>\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n            fill=\"#FFF\"\n          />\n          <path\n            d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n            fill=\"#555AB9\"\n          />\n          <path d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\" fill=\"#91BAF8\" />\n        </g>\n      </svg>\n      <h1>Acme</h1>\n    </div>\n    <div>\n      <div *ngIf=\"user\">\n        <span class=\"welcome\">\n          Welcome, <b>{{ user.name }}</b\n          >!\n        </span>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n      </div>\n      <div *ngIf=\"!user\">\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          class=\"margin-left\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          [primary]=\"true\"\n          class=\"margin-left\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </div>\n</header>`,\n  styleUrls: ['./header.css'],\n})\nexport class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n\n.storybook-header svg {\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header h1 {\n  display: inline-block;\n  vertical-align: top;\n  margin: 6px 0 6px 10px;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1;\n}\n\n.storybook-header button + button {\n  margin-left: 10px;\n}\n\n.storybook-header .welcome {\n  margin-right: 10px;\n  color: #333;\n  font-size: 14px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "HeroSectionComponent",
            "id": "component-HeroSectionComponent-9e2225e1d82d05106d32b1264a6d4a8b878ad34379437bc9048ec0938e81935a5ee19cf601d70f90e4bc0f781c24a7ebef02edb36462782a41d8cb678234e28d",
            "file": "src/app/features/landing/components/hero-section/hero-section.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-hero-section",
            "styleUrls": [
                "./hero-section.css"
            ],
            "styles": [],
            "templateUrl": [
                "./hero-section.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "navigateToLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "navigateToRegister",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-hero-section',\n  templateUrl: './hero-section.html',\n  styleUrls: ['./hero-section.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [CommonModule]\n})\nexport class HeroSectionComponent {\n\n  constructor(private router: Router) {}\n\n  navigateToRegister(): void {\n    this.router.navigate(['/register']);\n  }\n\n  navigateToLogin(): void {\n    this.router.navigate(['/login']);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".hero-section {\n  min-height: 100vh;\n  background: var(--primary-gradient);\n  display: flex;\n  align-items: center;\n  position: relative;\n  overflow: hidden;\n}\n\n.hero-section::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: radial-gradient(circle at 20% 80%, rgba(120, 119, 198, 0.3) 0%, transparent 50%),\n              radial-gradient(circle at 80% 20%, rgba(255, 255, 255, 0.1) 0%, transparent 50%);\n  pointer-events: none;\n}\n\n.hero-container {\n  max-width: var(--container-max-width);\n  margin: 0 auto;\n  padding: var(--container-padding);\n  position: relative;\n  z-index: 1;\n}\n\n.hero-content {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: var(--spacing-2xl);\n  align-items: center;\n  margin-bottom: var(--spacing-2xl);\n}\n\n.hero-text {\n  color: white;\n}\n\n.hero-title {\n  font-size: var(--font-size-6xl);\n  font-weight: 700;\n  line-height: 1.2;\n  margin-bottom: var(--spacing-md);\n}\n\n.gradient-text {\n  background: var(--accent-gradient);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n}\n\n.hero-description {\n  font-size: var(--font-size-xl);\n  line-height: 1.6;\n  margin-bottom: var(--spacing-lg);\n  opacity: 0.9;\n}\n\n.hero-buttons {\n  display: flex;\n  gap: var(--spacing-sm);\n  flex-wrap: wrap;\n}\n\n.hero-buttons .btn {\n  flex: 1;\n  min-width: 160px;\n  justify-content: center;\n  padding: var(--spacing-sm) var(--spacing-xl);\n}\n\n.hero-visual {\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: var(--spacing-lg);\n}\n\n.pdf-mockup {\n  background: white;\n  border-radius: var(--radius-lg);\n  box-shadow: var(--shadow-lg);\n  overflow: hidden;\n  width: 280px;\n  transform: rotate(-5deg);\n}\n\n.pdf-header {\n  background: #f5f5f5;\n  padding: var(--spacing-sm);\n  display: flex;\n  align-items: center;\n  gap: var(--spacing-sm);\n  border-bottom: 1px solid var(--border-light);\n}\n\n.pdf-buttons {\n  display: flex;\n  gap: var(--spacing-xs);\n}\n\n.pdf-button {\n  width: 12px;\n  height: 12px;\n  border-radius: var(--radius-full);\n}\n\n.pdf-button.red { background: #ff5f56; }\n.pdf-button.yellow { background: #ffbd2e; }\n.pdf-button.green { background: #27ca3f; }\n\n.pdf-title {\n  font-size: var(--font-size-sm);\n  font-weight: 500;\n  color: #666;\n}\n\n.pdf-content {\n  padding: var(--spacing-md);\n}\n\n.pdf-line {\n  height: 8px;\n  background: var(--border-light);\n  border-radius: var(--radius-sm);\n  margin-bottom: var(--spacing-xs);\n}\n\n.pdf-line.long { width: 100%; }\n.pdf-line.medium { width: 75%; }\n.pdf-line.short { width: 50%; }\n\n.pdf-question {\n  margin-top: var(--spacing-md);\n  display: flex;\n  gap: var(--spacing-sm);\n}\n\n.question-number {\n  font-weight: 600;\n  color: var(--text-dark);\n}\n\n.question-text {\n  flex: 1;\n}\n\n.pdf-options {\n  margin-top: var(--spacing-sm);\n  display: flex;\n  flex-direction: column;\n  gap: var(--spacing-xs);\n}\n\n.option {\n  padding: var(--spacing-xs);\n  border-radius: var(--radius-sm);\n  font-size: var(--font-size-sm);\n  transition: all var(--transition-normal);\n}\n\n.option.selected {\n  background: var(--primary-blue);\n  color: white;\n}\n\n.ai-process {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: var(--spacing-sm);\n}\n\n.process-arrow {\n  width: 40px;\n  height: 40px;\n  color: white;\n  opacity: 0.8;\n}\n\n.process-arrow svg {\n  width: 100%;\n  height: 100%;\n}\n\n.ai-badge {\n  background: var(--glass-bg);\n  backdrop-filter: var(--glass-blur);\n  border: 1px solid var(--glass-border);\n  border-radius: 20px;\n  padding: var(--spacing-xs) var(--spacing-sm);\n  color: white;\n  font-size: var(--font-size-sm);\n  display: flex;\n  align-items: center;\n  gap: var(--spacing-xs);\n}\n\n.ai-icon {\n  font-size: var(--font-size-lg);\n}\n\n.interactive-exam {\n  background: white;\n  border-radius: var(--radius-lg);\n  box-shadow: var(--shadow-lg);\n  overflow: hidden;\n  width: 300px;\n  transform: rotate(3deg);\n}\n\n.exam-header {\n  background: var(--primary-gradient);\n  color: white;\n  padding: var(--spacing-sm);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.exam-header h3 {\n  margin: 0;\n  font-size: var(--font-size-lg);\n}\n\n.timer {\n  font-size: var(--font-size-sm);\n  background: var(--glass-bg);\n  padding: 0.25rem var(--spacing-xs);\n  border-radius: var(--radius-sm);\n}\n\n.exam-question {\n  padding: var(--spacing-md);\n}\n\n.exam-question p {\n  margin: 0 0 var(--spacing-sm);\n  font-weight: 500;\n  color: var(--text-dark);\n}\n\n.exam-options {\n  display: flex;\n  flex-direction: column;\n  gap: 0.75rem;\n}\n\n.exam-option {\n  display: flex;\n  align-items: center;\n  gap: 0.75rem;\n  cursor: pointer;\n  padding: var(--spacing-xs);\n  border-radius: var(--radius-sm);\n  transition: all var(--transition-normal);\n}\n\n.exam-option:hover {\n  background: #f5f5f5;\n}\n\n.exam-option input[type=\"radio\"] {\n  width: 18px;\n  height: 18px;\n  accent-color: var(--primary-blue);\n}\n\n.hero-stats {\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: var(--spacing-lg);\n  margin-top: var(--spacing-lg);\n}\n\n.stat-item {\n  text-align: center;\n  color: white;\n}\n\n.stat-number {\n  font-size: var(--font-size-4xl);\n  font-weight: 700;\n  background: var(--accent-gradient);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n  margin-bottom: var(--spacing-xs);\n}\n\n.stat-label {\n  font-size: var(--font-size-sm);\n  opacity: 0.8;\n}\n\n/* Responsive design */\n@media (max-width: 768px) {\n  .hero-section {\n    margin-bottom: var(--spacing-xl);\n  }\n\n  .hero-content {\n    grid-template-columns: 1fr;\n    gap: var(--spacing-lg);\n    text-align: center;\n  }\n\n  .hero-title {\n    font-size: var(--font-size-4xl);\n  }\n\n  .hero-buttons {\n    flex-direction: column;\n    align-items: center;\n  }\n\n  .hero-buttons .btn {\n    width: 100%;\n    max-width: 280px;\n  }\n\n  .hero-visual {\n    flex-direction: column;\n    gap: var(--spacing-sm);\n  }\n\n  .pdf-mockup,\n  .interactive-exam {\n    transform: none;\n    width: 250px;\n  }\n\n  .hero-stats {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  .stat-number {\n    font-size: var(--font-size-3xl);\n  }\n}\n",
                    "styleUrl": "./hero-section.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<section class=\"hero-section\" aria-labelledby=\"hero-title\" role=\"banner\">\n  <div class=\"hero-container\">\n    <div class=\"hero-content\">\n      <div class=\"hero-text animate-fade-in-up\">\n        <h1 id=\"hero-title\" class=\"hero-title\">\n          Transforma tus exámenes PDF en\n          <span class=\"gradient-text\">experiencias interactivas</span>\n        </h1>\n        <p class=\"hero-description\">\n          Utiliza inteligencia artificial para extraer preguntas de tus PDFs,\n          crea exámenes colaborativos y evalúa a tus estudiantes de forma eficiente.\n        </p>\n        <div class=\"hero-buttons\" role=\"group\" aria-label=\"Acciones principales\">\n          <button\n            class=\"btn btn-primary animate-pulse\"\n            (click)=\"navigateToRegister()\"\n            aria-describedby=\"register-description\">\n            Comienza gratis\n          </button>\n          <span id=\"register-description\" class=\"sr-only\">Crea tu cuenta gratuita para empezar a transformar tus exámenes PDF</span>\n          <button\n            class=\"btn btn-secondary\"\n            (click)=\"navigateToLogin()\"\n            aria-describedby=\"login-description\">\n            Iniciar sesión\n          </button>\n          <span id=\"login-description\" class=\"sr-only\">Accede a tu cuenta existente</span>\n        </div>\n      </div>\n\n      <div class=\"hero-visual animate-fade-in-right\" aria-label=\"Demostración visual del proceso de conversión de PDF a examen interactivo\">\n        <div class=\"pdf-mockup animate-float\" role=\"img\" aria-label=\"Ejemplo de documento PDF de examen\">\n          <div class=\"pdf-header\">\n            <div class=\"pdf-buttons\" aria-hidden=\"true\">\n              <span class=\"pdf-button red\"></span>\n              <span class=\"pdf-button yellow\"></span>\n              <span class=\"pdf-button green\"></span>\n            </div>\n            <span class=\"pdf-title\">examen_matematicas.pdf</span>\n          </div>\n          <div class=\"pdf-content\">\n            <div class=\"pdf-line long\"></div>\n            <div class=\"pdf-line medium\"></div>\n            <div class=\"pdf-line short\"></div>\n            <div class=\"pdf-question\">\n              <div class=\"question-number\">1.</div>\n              <div class=\"question-text\">\n                <div class=\"pdf-line long\"></div>\n                <div class=\"pdf-options\">\n                  <div class=\"option\">a) Opción A</div>\n                  <div class=\"option\">b) Opción B</div>\n                  <div class=\"option selected\">c) Opción C</div>\n                  <div class=\"option\">d) Opción D</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"ai-process\">\n          <div class=\"process-arrow\">\n            <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n              <path d=\"M5 12h14M12 5l7 7-7 7\"/>\n            </svg>\n          </div>\n          <div class=\"ai-badge\">\n            <span class=\"ai-icon\">🤖</span>\n            <span>IA Processing</span>\n          </div>\n        </div>\n\n        <div class=\"interactive-exam animate-float\" style=\"animation-delay: 1s;\">\n          <div class=\"exam-header\">\n            <h3>Examen Interactivo</h3>\n            <span class=\"timer\">⏱️ 45:30</span>\n          </div>\n          <div class=\"exam-question\">\n            <p>¿Cuál es la derivada de x²?</p>\n            <div class=\"exam-options\">\n              <label class=\"exam-option\">\n                <input type=\"radio\" name=\"q1\" aria-label=\"Opción de respuesta: 2x\">\n                <span>2x</span>\n              </label>\n              <label class=\"exam-option\">\n                <input type=\"radio\" name=\"q1\" checked aria-label=\"Opción de respuesta correcta: x²\">\n                <span>x²</span>\n              </label>\n              <label class=\"exam-option\">\n                <input type=\"radio\" name=\"q1\" aria-label=\"Opción de respuesta: 2x²\">\n                <span>2x²</span>\n              </label>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <section class=\"hero-stats\" aria-labelledby=\"stats-title\">\n      <h2 id=\"stats-title\" class=\"sr-only\">Estadísticas de la plataforma</h2>\n      <div class=\"stat-item animate-fade-in-up\" style=\"animation-delay: 0.2s;\">\n        <div class=\"stat-number\" aria-label=\"Mil exámenes procesados\">1000+</div>\n        <div class=\"stat-label\">Exámenes procesados</div>\n      </div>\n      <div class=\"stat-item animate-fade-in-up\" style=\"animation-delay: 0.4s;\">\n        <div class=\"stat-number\" aria-label=\"Cincuenta mil preguntas extraídas\">50k+</div>\n        <div class=\"stat-label\">Preguntas extraídas</div>\n      </div>\n      <div class=\"stat-item animate-fade-in-up\" style=\"animation-delay: 0.6s;\">\n        <div class=\"stat-number\" aria-label=\"Noventa y cinco por ciento de precisión\">95%</div>\n        <div class=\"stat-label\">Precisión de IA</div>\n      </div>\n      <div class=\"stat-item animate-fade-in-up\" style=\"animation-delay: 0.8s;\">\n        <div class=\"stat-number\" aria-label=\"Disponible veinticuatro horas al día, siete días a la semana\">24/7</div>\n        <div class=\"stat-label\">Disponibilidad</div>\n      </div>\n    </section>\n  </div>\n</section>\n"
        },
        {
            "name": "LandingPageComponent",
            "id": "component-LandingPageComponent-c1beae2badceac24b8359308767f51959650d7ac94bfda396807a3bbc0a4d1180df381e492b88a979fc2a7a7e0ee6a63720fd9cb2f91a7ace2922a1f3d6dbcd9",
            "file": "src/app/features/landing/pages/landing-page/landing-page.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-landing-page",
            "styleUrls": [
                "./landing-page.css"
            ],
            "styles": [],
            "templateUrl": [
                "./landing-page.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "HeroSectionComponent",
                    "type": "component"
                },
                {
                    "name": "FeaturesSectionComponent",
                    "type": "component"
                },
                {
                    "name": "DemoSectionComponent",
                    "type": "component"
                },
                {
                    "name": "CtaSectionComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { HeroSectionComponent } from '../../components/hero-section/hero-section';\nimport { FeaturesSectionComponent } from '../../components/features-section/features-section';\nimport { DemoSectionComponent } from '../../components/demo-section/demo-section';\nimport { CtaSectionComponent } from '../../components/cta-section/cta-section';\n\n@Component({\n  selector: 'app-landing-page',\n  templateUrl: './landing-page.html',\n  styleUrls: ['./landing-page.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    HeroSectionComponent,\n    FeaturesSectionComponent,\n    DemoSectionComponent,\n    CtaSectionComponent\n  ]\n})\nexport class LandingPageComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".landing-page {\n  min-height: 100vh;\n  background: var(--primary-gradient);\n  overflow-x: hidden;\n}\n\n/* Skip Link Styles */\n.skip-link {\n  position: absolute;\n  top: -40px;\n  left: 20px;\n  background: var(--accent-gold);\n  color: #1e293b;\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  font-weight: 600;\n  z-index: 1000;\n  transition: top 0.3s ease;\n}\n\n.skip-link:focus {\n  top: 20px;\n}\n",
                    "styleUrl": "./landing-page.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<main class=\"landing-page\">\n  <!-- Skip Navigation Link -->\n  <a href=\"#hero-title\" class=\"skip-link sr-only-focusable\">\n    Saltar al contenido principal\n  </a>\n\n  <app-hero-section />\n  <app-features-section />\n  <app-demo-section />\n  <app-cta-section />\n</main>\n"
        },
        {
            "name": "LoginFormComponent",
            "id": "component-LoginFormComponent-509f9909d72eedc6ecc0421ca7b356ae1b9c6d6dbac53bf3b500f1f8acd06dc6b56ea69f9faf7becb0381c96bff838f4bc70c85d0e2def9f7640e69d2b16c229",
            "file": "src/app/features/auth/components/login-form/login-form.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./login-form.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "submitLogin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "fb",
                    "defaultValue": "inject(FormBuilder)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "hidePassword",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "required": false
                },
                {
                    "name": "loginForm",
                    "defaultValue": "this.fb.group({\n    email: ['', [Validators.required, Validators.email]],\n    password: ['', [Validators.required]]\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "submitLogin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "required": false
                }
            ],
            "methodsClass": [
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "togglePasswordVisibility",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "SubmitButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, output, input, ChangeDetectionStrategy, inject } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { SubmitButtonComponent } from '../../../../shared/components/submit-button';\nimport { LoginRequest } from '../../../../core/models/user.model';\n\n@Component({\n  selector: 'app-login-form',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    SubmitButtonComponent\n  ],\n  templateUrl: './login-form.html',\n  styleUrl: './login-form.css'\n})\nexport class LoginFormComponent {\n  private fb = inject(FormBuilder);\n\n  loading = input<boolean>(false);\n  submitLogin = output<LoginRequest>();\n\n  hidePassword = true;\n\n  loginForm: FormGroup = this.fb.group({\n    email: ['', [Validators.required, Validators.email]],\n    password: ['', [Validators.required]]\n  });\n\n  onSubmit(): void {\n    if (this.loginForm.valid) {\n      this.submitLogin.emit(this.loginForm.value);\n    }\n  }\n\n  togglePasswordVisibility(): void {\n    this.hidePassword = !this.hidePassword;\n  }\n}\n",
            "styleUrl": "./login-form.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<form [formGroup]=\"loginForm\"\n      (ngSubmit)=\"onSubmit()\"\n      class=\"login-form\"\n      role=\"form\"\n      aria-labelledby=\"login-form-title\"\n      novalidate>\n\n  <h2 id=\"login-form-title\" class=\"sr-only\">Formulario de inicio de sesión</h2>\n\n  <!-- Email Field -->\n  <div class=\"form-field\">\n    <mat-form-field appearance=\"outline\" class=\"full-width\">\n      <mat-label>Email</mat-label>\n      <input\n        matInput\n        type=\"email\"\n        formControlName=\"email\"\n        placeholder=\"tu@email.com\"\n        autocomplete=\"email\"\n        aria-describedby=\"email-error\"\n        [attr.aria-invalid]=\"loginForm.get('email')?.invalid && loginForm.get('email')?.touched\"\n      >\n      <mat-icon matSuffix aria-hidden=\"true\">email</mat-icon>\n      @if (loginForm.get('email')?.invalid && loginForm.get('email')?.touched) {\n        <mat-error id=\"email-error\" role=\"alert\">\n          @if (loginForm.get('email')?.errors?.['required']) {\n            El email es requerido\n          }\n          @if (loginForm.get('email')?.errors?.['email']) {\n            Ingresa un email válido\n          }\n        </mat-error>\n      }\n    </mat-form-field>\n  </div>\n\n  <!-- Password Field -->\n  <div class=\"form-field\">\n    <mat-form-field appearance=\"outline\" class=\"full-width\">\n      <mat-label>Contraseña</mat-label>\n      <input\n        matInput\n        [type]=\"hidePassword ? 'password' : 'text'\"\n        formControlName=\"password\"\n        placeholder=\"Tu contraseña\"\n        autocomplete=\"current-password\"\n        aria-describedby=\"password-error password-toggle-desc\"\n        [attr.aria-invalid]=\"loginForm.get('password')?.invalid && loginForm.get('password')?.touched\"\n      >\n      <button\n        mat-icon-button\n        matSuffix\n        type=\"button\"\n        (click)=\"togglePasswordVisibility()\"\n        [attr.aria-label]=\"hidePassword ? 'Mostrar contraseña' : 'Ocultar contraseña'\"\n        [attr.aria-pressed]=\"!hidePassword\"\n        aria-describedby=\"password-toggle-desc\"\n        class=\"password-toggle\"\n      >\n        <mat-icon aria-hidden=\"true\">{{ hidePassword ? 'visibility' : 'visibility_off' }}</mat-icon>\n      </button>\n      <span id=\"password-toggle-desc\" class=\"sr-only\">\n        {{ hidePassword ? 'La contraseña está oculta' : 'La contraseña es visible' }}\n      </span>\n      @if (loginForm.get('password')?.invalid && loginForm.get('password')?.touched) {\n        <mat-error id=\"password-error\" role=\"alert\">\n          La contraseña es requerida\n        </mat-error>\n      }\n    </mat-form-field>\n  </div>\n\n  <!-- Submit Button -->\n  <div class=\"form-actions\">\n    <app-submit-button\n      text=\"Iniciar Sesión\"\n      icon=\"login\"\n      [disabled]=\"loginForm.invalid\"\n      [loading]=\"loading()\"\n      loadingText=\"Iniciando sesión...\"\n      description=\"Acceder a tu cuenta de ExamScan\"\n      descriptionId=\"submit-desc\"\n      loadingDescription=\"Procesando inicio de sesión, por favor espera\"\n      loadingDescriptionId=\"loading-desc\"\n      (onClick)=\"onSubmit()\">\n    </app-submit-button>\n  </div>\n</form>\n"
        },
        {
            "name": "LoginPageComponent",
            "id": "component-LoginPageComponent-617eadc21a3e915e816d69798d612c793446012fb45ebf136418f31b4b1f01905e4141528797bab52a7150943c64fb754dc37e224ff289deb519841796ade8ac",
            "file": "src/app/features/auth/pages/login-page/login-page.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./login-page.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "authService",
                    "defaultValue": "inject(AuthService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "router",
                    "defaultValue": "inject(Router)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "snackBar",
                    "defaultValue": "inject(MatSnackBar)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "handleLogin",
                    "args": [
                        {
                            "name": "loginData",
                            "type": "LoginRequest",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "loginData",
                            "type": "LoginRequest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "LoginFormComponent",
                    "type": "component"
                },
                {
                    "name": "MatCardModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "MatSnackBarModule",
                    "type": "module"
                },
                {
                    "name": "RouterLink"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, signal, inject, ChangeDetectionStrategy } from '@angular/core';\nimport { Router, RouterLink } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { firstValueFrom } from 'rxjs';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSnackBarModule, MatSnackBar } from '@angular/material/snack-bar';\nimport { LoginFormComponent } from '../../components/login-form/login-form';\nimport { AuthService } from '../../services/auth.service';\nimport { LoginRequest } from '../../../../core/models/user.model';\n\n@Component({\n  selector: 'app-login-page',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    CommonModule,\n    LoginFormComponent,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSnackBarModule,\n    RouterLink\n  ],\n  templateUrl: './login-page.html',\n  styleUrl: './login-page.css'\n})\nexport class LoginPageComponent {\n  private authService = inject(AuthService);\n  private router = inject(Router);\n  private snackBar = inject(MatSnackBar);\n\n  loading = signal(false);\n\n  async handleLogin(loginData: LoginRequest): Promise<void> {\n    this.loading.set(true);\n\n    try {\n      const response = await firstValueFrom(this.authService.login(loginData));\n      this.authService.setSession(response);\n\n      this.snackBar.open('¡Bienvenido! Inicio de sesión exitoso', 'Cerrar', {\n        duration: 3000,\n        panelClass: ['success-snackbar']\n      });\n\n      this.router.navigate(['/dashboard']);\n    } catch (error: any) {\n      console.error('Error en login:', error);\n\n      this.snackBar.open(\n        error.message || 'Error al iniciar sesión. Verifica tus credenciales.',\n        'Cerrar',\n        {\n          duration: 5000,\n          panelClass: ['error-snackbar']\n        }\n      );\n    } finally {\n      this.loading.set(false);\n    }\n  }\n}\n",
            "styleUrl": "./login-page.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<main class=\"login-page\" role=\"main\" aria-labelledby=\"login-title\">\n  <div class=\"login-container\">\n    <section class=\"login-card\" aria-labelledby=\"login-title\">\n      <header class=\"login-header\">\n        <div class=\"login-icon-wrapper\" aria-hidden=\"true\">\n          <mat-icon class=\"login-icon\">account_circle</mat-icon>\n        </div>\n        <h1 id=\"login-title\" class=\"login-title\">Iniciar Sesión</h1>\n        <p class=\"login-subtitle\">Accede a tu cuenta de ExamScan</p>\n      </header>\n\n      <div class=\"login-content\">\n        <app-login-form\n          [loading]=\"loading()\"\n          (submitLogin)=\"handleLogin($event)\"\n        />\n      </div>\n\n      <footer class=\"login-actions\">\n        <p class=\"register-link\">\n          ¿No tienes cuenta?\n          <a routerLink=\"/register\"\n             class=\"register-button\"\n             aria-describedby=\"register-desc\">\n            Regístrate aquí\n          </a>\n          <span id=\"register-desc\" class=\"sr-only\">Crear una nueva cuenta en ExamScan</span>\n        </p>\n      </footer>\n    </section>\n  </div>\n</main>\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-21dd6eb370b4983b5c21c84d40e6f54d266a9d9af9889e6e76b35c43058bd53b3e451bad089d5adf4bea46647ba10265a2fa8cb15630398e75636307d4817fc6",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>  <storybook-header\n    [user]=\"user\"\n    (onLogout)=\"doLogout()\"\n    (onLogin)=\"doLogin()\"\n    (onCreateAccount)=\"doCreateAccount()\"\n  ></storybook-header>\n  <section class=\"storybook-page\">\n    <h2>Pages in Storybook</h2>\n    <p>\n      We recommend building UIs with a\n      <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <strong>component-driven</strong>\n      </a>\n      process starting with atomic components and ending with pages.\n    </p>\n    <p>\n      Render pages with mock data. This makes it easy to build and review page states without\n      needing to navigate to them in your app. Here are some handy patterns for managing page data\n      in Storybook:\n    </p>\n    <ul>\n      <li>\n        Use a higher-level connected component. Storybook helps you compose such data from the\n        \"args\" of child component stories\n      </li>\n      <li>\n        Assemble data in the page component from your services. You can mock these services out\n        using Storybook.\n      </li>\n    </ul>\n    <p>\n      Get a guided tutorial on component-driven development at\n      <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Storybook tutorials\n      </a>\n      . Read more in the\n      <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n      .\n    </p>\n    <div class=\"tip-wrapper\">\n      <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n      <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n            id=\"a\"\n            fill=\"#999\"\n          />\n        </g>\n      </svg>\n      Viewports addon in the toolbar\n    </div>\n  </section>\n</article>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 69
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HeaderComponent } from './header.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-page',\n  standalone: true,\n  imports: [CommonModule, HeaderComponent],\n  template: `<article>\n  <storybook-header\n    [user]=\"user\"\n    (onLogout)=\"doLogout()\"\n    (onLogin)=\"doLogin()\"\n    (onCreateAccount)=\"doCreateAccount()\"\n  ></storybook-header>\n  <section class=\"storybook-page\">\n    <h2>Pages in Storybook</h2>\n    <p>\n      We recommend building UIs with a\n      <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <strong>component-driven</strong>\n      </a>\n      process starting with atomic components and ending with pages.\n    </p>\n    <p>\n      Render pages with mock data. This makes it easy to build and review page states without\n      needing to navigate to them in your app. Here are some handy patterns for managing page data\n      in Storybook:\n    </p>\n    <ul>\n      <li>\n        Use a higher-level connected component. Storybook helps you compose such data from the\n        \"args\" of child component stories\n      </li>\n      <li>\n        Assemble data in the page component from your services. You can mock these services out\n        using Storybook.\n      </li>\n    </ul>\n    <p>\n      Get a guided tutorial on component-driven development at\n      <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Storybook tutorials\n      </a>\n      . Read more in the\n      <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n      .\n    </p>\n    <div class=\"tip-wrapper\">\n      <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n      <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n            id=\"a\"\n            fill=\"#999\"\n          />\n        </g>\n      </svg>\n      Viewports addon in the toolbar\n    </div>\n  </section>\n</article>`,\n  styleUrls: ['./page.css'],\n})\nexport class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-page {\n  margin: 0 auto;\n  padding: 48px 20px;\n  max-width: 600px;\n  color: #333;\n  font-size: 14px;\n  line-height: 24px;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n\n.storybook-page h2 {\n  display: inline-block;\n  vertical-align: top;\n  margin: 0 0 4px;\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 1;\n}\n\n.storybook-page p {\n  margin: 1em 0;\n}\n\n.storybook-page a {\n  color: inherit;\n}\n\n.storybook-page ul {\n  margin: 1em 0;\n  padding-left: 30px;\n}\n\n.storybook-page li {\n  margin-bottom: 8px;\n}\n\n.storybook-page .tip {\n  display: inline-block;\n  vertical-align: top;\n  margin-right: 10px;\n  border-radius: 1em;\n  background: #e7fdd8;\n  padding: 4px 12px;\n  color: #357a14;\n  font-weight: 700;\n  font-size: 11px;\n  line-height: 12px;\n}\n\n.storybook-page .tip-wrapper {\n  margin-top: 40px;\n  margin-bottom: 40px;\n  font-size: 13px;\n  line-height: 20px;\n}\n\n.storybook-page .tip-wrapper svg {\n  display: inline-block;\n  vertical-align: top;\n  margin-top: 3px;\n  margin-right: 4px;\n  width: 12px;\n  height: 12px;\n}\n\n.storybook-page .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "RegisterFormComponent",
            "id": "component-RegisterFormComponent-fce5fcc51eb62f9f9db3f9d645ace0b3aa473aeed161d043c93b0acfbb06314ef979c331c62bf40838aff1d3fca55ff3d09f52e6affda35522be5118d082c41f",
            "file": "src/app/features/auth/components/register-form/register-form.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-register-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./register-form.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "submitRegister",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "fb",
                    "defaultValue": "inject(FormBuilder)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "required": false
                },
                {
                    "name": "registerForm",
                    "defaultValue": "this.fb.group({\n    full_name: ['', [Validators.required]],\n    username: ['', [Validators.required]],\n    email: ['', [Validators.required, Validators.email]],\n    role: ['', [Validators.required]],\n    password: ['', [Validators.required, Validators.minLength(6)]],\n    confirmPassword: ['', [Validators.required]]\n  }, { validators: this.passwordMatchValidator })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "showConfirmPassword",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "showPassword",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "submitRegister",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "required": false
                }
            ],
            "methodsClass": [
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "passwordMatchValidator",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{ passwordMismatch: boolean; }",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "FormGroup",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleConfirmPasswordVisibility",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "togglePasswordVisibility",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "MatSelectModule",
                    "type": "module"
                },
                {
                    "name": "SubmitButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, output, input, ChangeDetectionStrategy, inject, signal } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\nimport { SubmitButtonComponent } from '../../../../shared/components/submit-button';\nimport { RegisterRequest } from '../../../../core/models/user.model';\n\n@Component({\n  selector: 'app-register-form',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSelectModule,\n    SubmitButtonComponent\n  ],\n  templateUrl: './register-form.html',\n  styleUrl: './register-form.css'\n})\nexport class RegisterFormComponent {\n  private fb = inject(FormBuilder);\n\n  loading = input<boolean>(false);\n  submitRegister = output<RegisterRequest>();\n\n  showPassword = signal(false);\n  showConfirmPassword = signal(false);\n\n  registerForm: FormGroup = this.fb.group({\n    full_name: ['', [Validators.required]],\n    username: ['', [Validators.required]],\n    email: ['', [Validators.required, Validators.email]],\n    role: ['', [Validators.required]],\n    password: ['', [Validators.required, Validators.minLength(6)]],\n    confirmPassword: ['', [Validators.required]]\n  }, { validators: this.passwordMatchValidator });\n\n  passwordMatchValidator(form: FormGroup) {\n    const password = form.get('password');\n    const confirmPassword = form.get('confirmPassword');\n\n    if (password && confirmPassword && password.value !== confirmPassword.value) {\n      return { passwordMismatch: true };\n    }\n    return null;\n  }\n\n  togglePasswordVisibility(): void {\n    this.showPassword.set(!this.showPassword());\n  }\n\n  toggleConfirmPasswordVisibility(): void {\n    this.showConfirmPassword.set(!this.showConfirmPassword());\n  }\n\n  onSubmit(): void {\n    if (this.registerForm.valid) {\n      const { confirmPassword, ...registerData } = this.registerForm.value;\n      this.submitRegister.emit(registerData);\n    }\n  }\n}\n",
            "styleUrl": "./register-form.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<form [formGroup]=\"registerForm\"\n      (ngSubmit)=\"onSubmit()\"\n      class=\"register-form\"\n      role=\"form\"\n      aria-labelledby=\"register-form-title\"\n      novalidate>\n\n  <h2 id=\"register-form-title\" class=\"sr-only\">Formulario de registro de cuenta</h2>\n\n  <!-- Full Name Field -->\n  <div class=\"form-field\">\n    <mat-form-field appearance=\"outline\" class=\"full-width\">\n      <mat-label>Nombre Completo</mat-label>\n      <input\n        matInput\n        formControlName=\"full_name\"\n        placeholder=\"Tu nombre completo\"\n        autocomplete=\"name\"\n        aria-describedby=\"name-error\"\n        [attr.aria-invalid]=\"registerForm.get('full_name')?.invalid && registerForm.get('full_name')?.touched\"\n      >\n      <mat-icon matSuffix aria-hidden=\"true\">person</mat-icon>\n      @if (registerForm.get('full_name')?.invalid && registerForm.get('full_name')?.touched) {\n        <mat-error id=\"name-error\" role=\"alert\">El nombre es requerido</mat-error>\n      }\n    </mat-form-field>\n  </div>\n\n  <!-- Username Field -->\n  <div class=\"form-field\">\n    <mat-form-field appearance=\"outline\" class=\"full-width\">\n      <mat-label>Nombre de Usuario</mat-label>\n      <input\n        matInput\n        formControlName=\"username\"\n        placeholder=\"Usuario único\"\n        autocomplete=\"username\"\n        aria-describedby=\"username-error\"\n        [attr.aria-invalid]=\"registerForm.get('username')?.invalid && registerForm.get('username')?.touched\"\n      >\n      <mat-icon matSuffix aria-hidden=\"true\">account_circle</mat-icon>\n      @if (registerForm.get('username')?.invalid && registerForm.get('username')?.touched) {\n        <mat-error id=\"username-error\" role=\"alert\">El nombre de usuario es requerido</mat-error>\n      }\n    </mat-form-field>\n  </div>\n\n  <!-- Email Field -->\n  <div class=\"form-field\">\n    <mat-form-field appearance=\"outline\" class=\"full-width\">\n      <mat-label>Correo Electrónico</mat-label>\n      <input\n        matInput\n        type=\"email\"\n        formControlName=\"email\"\n        placeholder=\"tu@email.com\"\n        autocomplete=\"email\"\n        aria-describedby=\"email-error\"\n        [attr.aria-invalid]=\"registerForm.get('email')?.invalid && registerForm.get('email')?.touched\"\n      >\n      <mat-icon matSuffix aria-hidden=\"true\">email</mat-icon>\n      @if (registerForm.get('email')?.invalid && registerForm.get('email')?.touched) {\n        <mat-error id=\"email-error\" role=\"alert\">\n          @if (registerForm.get('email')?.errors?.['required']) {\n            El email es requerido\n          }\n          @if (registerForm.get('email')?.errors?.['email']) {\n            Ingresa un email válido\n          }\n        </mat-error>\n      }\n    </mat-form-field>\n  </div>\n\n  <!-- User Role Field -->\n  <div class=\"form-field\">\n    <mat-form-field appearance=\"outline\" class=\"full-width\">\n      <mat-label>Tipo de Usuario</mat-label>\n      <mat-select\n        formControlName=\"role\"\n        aria-describedby=\"role-error role-help\"\n        [attr.aria-invalid]=\"registerForm.get('role')?.invalid && registerForm.get('role')?.touched\">\n        <mat-option value=\"teacher\" aria-describedby=\"teacher-desc\">\n          <div class=\"option-content\">\n            <mat-icon aria-hidden=\"true\">school</mat-icon>\n            <span>Profesor</span>\n          </div>\n          <span id=\"teacher-desc\" class=\"sr-only\">Cuenta para educadores y profesores</span>\n        </mat-option>\n        <mat-option value=\"student\" aria-describedby=\"student-desc\">\n          <div class=\"option-content\">\n            <mat-icon aria-hidden=\"true\">menu_book</mat-icon>\n            <span>Estudiante</span>\n          </div>\n          <span id=\"student-desc\" class=\"sr-only\">Cuenta para estudiantes</span>\n        </mat-option>\n      </mat-select>\n      <mat-icon matSuffix aria-hidden=\"true\">badge</mat-icon>\n      <span id=\"role-help\" class=\"sr-only\">Selecciona si eres profesor o estudiante</span>\n      @if (registerForm.get('role')?.invalid && registerForm.get('role')?.touched) {\n        <mat-error id=\"role-error\" role=\"alert\">Selecciona tu tipo de usuario</mat-error>\n      }\n    </mat-form-field>\n  </div>\n\n  <!-- Password Field -->\n  <div class=\"form-field\">\n    <mat-form-field appearance=\"outline\" class=\"full-width\">\n      <mat-label>Contraseña</mat-label>\n      <input\n        matInput\n        [type]=\"showPassword() ? 'text' : 'password'\"\n        formControlName=\"password\"\n        placeholder=\"Mínimo 6 caracteres\"\n        autocomplete=\"new-password\"\n        aria-describedby=\"password-error password-toggle-desc password-help\"\n        [attr.aria-invalid]=\"registerForm.get('password')?.invalid && registerForm.get('password')?.touched\"\n      >\n      <button\n        mat-icon-button\n        matSuffix\n        type=\"button\"\n        (click)=\"togglePasswordVisibility()\"\n        [attr.aria-label]=\"showPassword() ? 'Ocultar contraseña' : 'Mostrar contraseña'\"\n        [attr.aria-pressed]=\"showPassword()\"\n        aria-describedby=\"password-toggle-desc\"\n        class=\"password-toggle\"\n      >\n        <mat-icon aria-hidden=\"true\">{{showPassword() ? 'visibility_off' : 'visibility'}}</mat-icon>\n      </button>\n      <span id=\"password-toggle-desc\" class=\"sr-only\">\n        {{ showPassword() ? 'La contraseña es visible' : 'La contraseña está oculta' }}\n      </span>\n      <span id=\"password-help\" class=\"sr-only\">Debe tener al menos 6 caracteres</span>\n      @if (registerForm.get('password')?.invalid && registerForm.get('password')?.touched) {\n        <mat-error id=\"password-error\" role=\"alert\">\n          @if (registerForm.get('password')?.errors?.['required']) {\n            La contraseña es requerida\n          }\n          @if (registerForm.get('password')?.errors?.['minlength']) {\n            La contraseña debe tener al menos 6 caracteres\n          }\n        </mat-error>\n      }\n    </mat-form-field>\n  </div>\n\n  <!-- Confirm Password Field -->\n  <div class=\"form-field\">\n    <mat-form-field appearance=\"outline\" class=\"full-width\">\n      <mat-label>Confirmar Contraseña</mat-label>\n      <input\n        matInput\n        [type]=\"showConfirmPassword() ? 'text' : 'password'\"\n        formControlName=\"confirmPassword\"\n        placeholder=\"Repite tu contraseña\"\n        autocomplete=\"new-password\"\n        aria-describedby=\"confirm-password-error confirm-toggle-desc\"\n        [attr.aria-invalid]=\"(registerForm.get('confirmPassword')?.invalid || registerForm.hasError('passwordMismatch')) && registerForm.get('confirmPassword')?.touched\"\n      >\n      <button\n        mat-icon-button\n        matSuffix\n        type=\"button\"\n        (click)=\"toggleConfirmPasswordVisibility()\"\n        [attr.aria-label]=\"showConfirmPassword() ? 'Ocultar confirmación de contraseña' : 'Mostrar confirmación de contraseña'\"\n        [attr.aria-pressed]=\"showConfirmPassword()\"\n        aria-describedby=\"confirm-toggle-desc\"\n        class=\"password-toggle\"\n      >\n        <mat-icon aria-hidden=\"true\">{{showConfirmPassword() ? 'visibility_off' : 'visibility'}}</mat-icon>\n      </button>\n      <span id=\"confirm-toggle-desc\" class=\"sr-only\">\n        {{ showConfirmPassword() ? 'La confirmación de contraseña es visible' : 'La confirmación de contraseña está oculta' }}\n      </span>\n      @if (registerForm.get('confirmPassword')?.invalid && registerForm.get('confirmPassword')?.touched) {\n        <mat-error id=\"confirm-password-error\" role=\"alert\">\n          @if (registerForm.get('confirmPassword')?.errors?.['required']) {\n            Confirma tu contraseña\n          }\n        </mat-error>\n      }\n      @if (registerForm.hasError('passwordMismatch') && registerForm.get('confirmPassword')?.touched) {\n        <mat-error role=\"alert\">Las contraseñas no coinciden</mat-error>\n      }\n    </mat-form-field>\n  </div>\n\n  <!-- Submit Button -->\n  <div class=\"form-actions\">\n    <app-submit-button\n      text=\"Crear Cuenta\"\n      icon=\"person_add\"\n      [disabled]=\"registerForm.invalid\"\n      [loading]=\"loading()\"\n      loadingText=\"Creando cuenta...\"\n      description=\"Registrarse en ExamScan\"\n      descriptionId=\"submit-desc\"\n      loadingDescription=\"Procesando registro, por favor espera\"\n      loadingDescriptionId=\"loading-desc\"\n      (onClick)=\"onSubmit()\">\n    </app-submit-button>\n  </div>\n</form>\n"
        },
        {
            "name": "RegisterPageComponent",
            "id": "component-RegisterPageComponent-7beefc62248f69017a8e0489d64bab1f62fda3fe584f16a808b32628a0ee0c2b66b1ed34ac449d0b29d8f0f27b7079e282d7d21fb7300e3134778423d0f64ce6",
            "file": "src/app/features/auth/pages/register-page/register-page.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-register-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./register-page.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "authService",
                    "defaultValue": "inject(AuthService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "router",
                    "defaultValue": "inject(Router)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "snackBar",
                    "defaultValue": "inject(MatSnackBar)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "handleRegister",
                    "args": [
                        {
                            "name": "registerData",
                            "type": "RegisterRequest",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "registerData",
                            "type": "RegisterRequest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RegisterFormComponent",
                    "type": "component"
                },
                {
                    "name": "MatCardModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "MatSnackBarModule",
                    "type": "module"
                },
                {
                    "name": "RouterLink"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, signal, inject, ChangeDetectionStrategy } from '@angular/core';\nimport { Router, RouterLink } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { firstValueFrom } from 'rxjs';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSnackBarModule, MatSnackBar } from '@angular/material/snack-bar';\nimport { RegisterFormComponent } from '../../components/register-form/register-form';\nimport { AuthService } from '../../services/auth.service';\nimport { RegisterRequest } from '../../../../core/models/user.model';\n\n@Component({\n  selector: 'app-register-page',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    CommonModule,\n    RegisterFormComponent,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSnackBarModule,\n    RouterLink\n  ],\n  templateUrl: './register-page.html',\n  styleUrl: './register-page.css'\n})\nexport class RegisterPageComponent {\n  private authService = inject(AuthService);\n  private router = inject(Router);\n  private snackBar = inject(MatSnackBar);\n\n  loading = signal(false);\n\n  async handleRegister(registerData: RegisterRequest): Promise<void> {\n    this.loading.set(true);\n\n    try {\n      const response = await firstValueFrom(this.authService.register(registerData));\n      this.authService.setSession(response);\n\n      this.snackBar.open('¡Cuenta creada exitosamente! Bienvenido', 'Cerrar', {\n        duration: 3000,\n        panelClass: ['success-snackbar']\n      });\n\n      this.router.navigate(['/dashboard']);\n    } catch (error: any) {\n      console.error('Error en registro:', error);\n\n      this.snackBar.open(\n        error.message || 'Error al crear la cuenta. Verifica los datos e intenta nuevamente.',\n        'Cerrar',\n        {\n          duration: 5000,\n          panelClass: ['error-snackbar']\n        }\n      );\n    } finally {\n      this.loading.set(false);\n    }\n  }\n}\n",
            "styleUrl": "./register-page.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<main class=\"register-page\" role=\"main\" aria-labelledby=\"register-title\">\n  <div class=\"register-container\">\n    <section class=\"register-card\" aria-labelledby=\"register-title\">\n      <header class=\"register-header\">\n        <div class=\"register-icon-wrapper\" aria-hidden=\"true\">\n          <mat-icon class=\"register-icon\">person_add</mat-icon>\n        </div>\n        <h1 id=\"register-title\" class=\"register-title\">Crear Cuenta</h1>\n        <p class=\"register-subtitle\">Únete a ExamScan y comienza tu experiencia</p>\n      </header>\n\n      <div class=\"register-content\">\n        <app-register-form\n          [loading]=\"loading()\"\n          (submitRegister)=\"handleRegister($event)\"\n        />\n      </div>\n\n      <footer class=\"register-actions\">\n        <p class=\"login-link\">\n          ¿Ya tienes cuenta?\n          <a routerLink=\"/login\"\n             class=\"login-button\"\n             aria-describedby=\"login-desc\">\n            Inicia sesión aquí\n          </a>\n          <span id=\"login-desc\" class=\"sr-only\">Acceder a tu cuenta existente en ExamScan</span>\n        </p>\n      </footer>\n    </section>\n  </div>\n</main>\n"
        },
        {
            "name": "SubmitButtonComponent",
            "id": "component-SubmitButtonComponent-f285c596bc513c869150aae02eed7c83a4012ddfdb3f538e64f91318f51dc6b6b6dfb6cb704734aed0f36050a4818f09d4f4355289c74d64271700af760c2980",
            "file": "src/app/shared/components/submit-button/submit-button.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-submit-button",
            "styleUrls": [],
            "styles": [],
            "template": "<button\n  mat-raised-button\n  type=\"submit\"\n  class=\"submit-button\"\n  [disabled]=\"disabled() || loading()\"\n  [attr.aria-describedby]=\"loading() ? loadingDescriptionId() : descriptionId()\"\n  (click)=\"onClick.emit()\"\n>\n  @if (loading()) {\n    <mat-progress-spinner\n      diameter=\"20\"\n      class=\"inline-spinner\"\n      mode=\"indeterminate\"\n      aria-hidden=\"true\">\n    </mat-progress-spinner>\n    <span>{{ loadingText() }}</span>\n    @if (loadingDescriptionId()) {\n      <span [id]=\"loadingDescriptionId()\" class=\"sr-only\">\n        {{ loadingDescription() }}\n      </span>\n    }\n  } @else {\n    @if (icon()) {\n      <mat-icon aria-hidden=\"true\">{{ icon() }}</mat-icon>\n    }\n    <span>{{ text() }}</span>\n    @if (descriptionId()) {\n      <span [id]=\"descriptionId()\" class=\"sr-only\">\n        {{ description() }}\n      </span>\n    }\n  }\n</button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 52,
                    "required": false
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 53,
                    "required": false
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "required": true
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 64,
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "description",
                    "defaultValue": "input<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "descriptionId",
                    "defaultValue": "input<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 59
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 52,
                    "required": false
                },
                {
                    "name": "icon",
                    "defaultValue": "input<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 53,
                    "required": false
                },
                {
                    "name": "loadingDescription",
                    "defaultValue": "input<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 60
                },
                {
                    "name": "loadingDescriptionId",
                    "defaultValue": "input<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "loadingText",
                    "defaultValue": "input<string>('Procesando...')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "onClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 64,
                    "required": false
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "required": true
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "MatProgressSpinnerModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, input, output } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n@Component({\n  selector: 'app-submit-button',\n  imports: [MatButtonModule, MatIconModule, MatProgressSpinnerModule],\n  styleUrl: './submit-button.css',\n  template: `\n    <button\n      mat-raised-button\n      type=\"submit\"\n      class=\"submit-button\"\n      [disabled]=\"disabled() || loading()\"\n      [attr.aria-describedby]=\"loading() ? loadingDescriptionId() : descriptionId()\"\n      (click)=\"onClick.emit()\"\n    >\n      @if (loading()) {\n        <mat-progress-spinner\n          diameter=\"20\"\n          class=\"inline-spinner\"\n          mode=\"indeterminate\"\n          aria-hidden=\"true\">\n        </mat-progress-spinner>\n        <span>{{ loadingText() }}</span>\n        @if (loadingDescriptionId()) {\n          <span [id]=\"loadingDescriptionId()\" class=\"sr-only\">\n            {{ loadingDescription() }}\n          </span>\n        }\n      } @else {\n        @if (icon()) {\n          <mat-icon aria-hidden=\"true\">{{ icon() }}</mat-icon>\n        }\n        <span>{{ text() }}</span>\n        @if (descriptionId()) {\n          <span [id]=\"descriptionId()\" class=\"sr-only\">\n            {{ description() }}\n          </span>\n        }\n      }\n    </button>\n  `,\n  styles: []\n})\nexport class SubmitButtonComponent {\n  // Required inputs\n  text = input.required<string>();\n\n  // Optional inputs\n  disabled = input<boolean>(false);\n  loading = input<boolean>(false);\n  icon = input<string>('');\n  loadingText = input<string>('Procesando...');\n\n  // Accessibility inputs\n  description = input<string>('');\n  descriptionId = input<string>('');\n  loadingDescription = input<string>('');\n  loadingDescriptionId = input<string>('');\n\n  // Output\n  onClick = output<void>();\n}\n",
            "styleUrl": "./submit-button.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n  providers: [\n    provideBrowserGlobalErrorListeners(),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes),\n    provideHttpClient(withInterceptors([authInterceptor]))\n  ]\n}"
            },
            {
                "name": "authGuard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/guards/auth.guard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "CanActivateFn",
                "defaultValue": "(route, state) => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n\n  if (authService.authenticated()) {\n    return true;\n  }\n\n  router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n  return false;\n}"
            },
            {
                "name": "authInterceptor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/interceptors/auth.interceptor.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "HttpInterceptorFn",
                "defaultValue": "(req, next) => {\n  const token = localStorage.getItem('auth_token');\n\n  if (token) {\n    const authReq = req.clone({\n      headers: req.headers.set('Authorization', `Bearer ${token}`)\n    });\n    return next(authReq);\n  }\n\n  return next(req);\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true,\n  apiUrl: '/api/v1'  // En producción usaría la misma URL base\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  apiUrl: 'http://localhost:8000/api'\n}"
            },
            {
                "name": "guestGuard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/guards/auth.guard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "CanActivateFn",
                "defaultValue": "(route, state) => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n\n  if (!authService.authenticated()) {\n    return true;\n  }\n\n  router.navigate(['/dashboard']);\n  return false;\n}"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n  providers: [\n    provideBrowserGlobalErrorListeners(),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes),\n    provideHttpClient(withInterceptors([authInterceptor]))\n  ]\n}"
                }
            ],
            "src/app/core/guards/auth.guard.ts": [
                {
                    "name": "authGuard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/guards/auth.guard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CanActivateFn",
                    "defaultValue": "(route, state) => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n\n  if (authService.authenticated()) {\n    return true;\n  }\n\n  router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n  return false;\n}"
                },
                {
                    "name": "guestGuard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/guards/auth.guard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CanActivateFn",
                    "defaultValue": "(route, state) => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n\n  if (!authService.authenticated()) {\n    return true;\n  }\n\n  router.navigate(['/dashboard']);\n  return false;\n}"
                }
            ],
            "src/app/core/interceptors/auth.interceptor.ts": [
                {
                    "name": "authInterceptor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/interceptors/auth.interceptor.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HttpInterceptorFn",
                    "defaultValue": "(req, next) => {\n  const token = localStorage.getItem('auth_token');\n\n  if (token) {\n    const authReq = req.clone({\n      headers: req.headers.set('Authorization', `Bearer ${token}`)\n    });\n    return next(authReq);\n  }\n\n  return next(req);\n}"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true,\n  apiUrl: '/api/v1'  // En producción usaría la misma URL base\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  apiUrl: 'http://localhost:8000/api'\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 2,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.ts",
                "type": "component",
                "linktype": "component",
                "name": "App",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/guards/auth.guard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "authGuard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/guards/auth.guard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "guestGuard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/interceptors/auth.interceptor.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "authInterceptor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/models/user.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "LoginRequest",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/models/user.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "LoginResponse",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/models/user.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "RegisterRequest",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/models/user.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/features/auth/components/login-form/login-form.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/features/auth/components/register-form/register-form.ts",
                "type": "component",
                "linktype": "component",
                "name": "RegisterFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/features/auth/pages/login-page/login-page.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/features/auth/pages/register-page/register-page.ts",
                "type": "component",
                "linktype": "component",
                "name": "RegisterPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/features/auth/services/auth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthService",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/features/dashboard/components/dashboard-card/dashboard-card.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/features/dashboard/components/dashboard-header/dashboard-header.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardHeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/features/dashboard/pages/dashboard-page/dashboard-page.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/features/dashboard/pages/dashboard-page/dashboard-page.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DashboardCard",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/features/landing/components/cta-section/cta-section.ts",
                "type": "component",
                "linktype": "component",
                "name": "CtaSectionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/features/landing/components/demo-section/demo-section.ts",
                "type": "component",
                "linktype": "component",
                "name": "DemoSectionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/features/landing/components/demo-section/demo-section.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DemoStep",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/features/landing/components/features-section/features-section.ts",
                "type": "component",
                "linktype": "component",
                "name": "FeaturesSectionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/features/landing/components/features-section/features-section.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Feature",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/features/landing/components/hero-section/hero-section.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeroSectionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/features/landing/pages/landing-page/landing-page.ts",
                "type": "component",
                "linktype": "component",
                "name": "LandingPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/submit-button/submit-button.ts",
                "type": "component",
                "linktype": "component",
                "name": "SubmitButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}