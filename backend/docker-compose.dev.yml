version: "3.8"

services:
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+psycopg2://app_user:app_password@db-dev:5432/app
      - SECRET_KEY=development-secret-key-not-for-production
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - PYTHONPATH=/app
    depends_on:
      db-dev:
        condition: service_healthy
    volumes:
      # Bind mounts para desarrollo
      - ./app:/app/app
      - ./alembic:/app/alembic
      - ./scripts:/app/scripts
      - ./pyproject.toml:/app/pyproject.toml
      - ./uv.lock:/app/uv.lock
      - ./alembic.ini:/app/alembic.ini
    networks:
      - exam-scan-dev
    # Override para desarrollo con hot reload
    command: ["uv", "run", "fastapi", "dev", "app/main.py", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  db-dev:
    image: postgres:15-alpine
    ports:
      - "5433:5432"  # Puerto diferente para no conflictar
    environment:
      - POSTGRES_DB=app
      - POSTGRES_USER=app_user
      - POSTGRES_PASSWORD=app_password
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app_user -d app"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s
    networks:
      - exam-scan-dev

  redis-dev:
    image: redis:7-alpine
    ports:
      - "6380:6379"  # Puerto diferente para no conflictar
    volumes:
      - redis_data_dev:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - exam-scan-dev

  # Contenedor adicional para ejecutar migraciones manualmente
  migrate:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql+psycopg2://app_user:app_password@db-dev:5432/app
    depends_on:
      db-dev:
        condition: service_healthy
    volumes:
      - ./app:/app/app
      - ./alembic:/app/alembic
      - ./scripts:/app/scripts
    networks:
      - exam-scan-dev
    entrypoint: ["./scripts/migrate.sh"]
    command: ["status"]
    profiles:
      - tools  # Solo se ejecuta cuando se especifica: docker-compose --profile tools up migrate

volumes:
  postgres_data_dev:
    driver: local
  redis_data_dev:
    driver: local

networks:
  exam-scan-dev:
    driver: bridge
